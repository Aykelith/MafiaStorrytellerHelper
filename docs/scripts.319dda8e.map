{"version":3,"sources":["scripts/index.js"],"names":["GAME_STEP","WELCOME","GAME_SETUP","PLAYERS_SETUP","NIGHT","GENERATOR","PLAYER_ROLES","Mafia","text","id","Godfather","Serialkiller","Veteran","Vigilante","Policeman","Doctor","Mayor","Clown","Citizen","roleIsInnocent","role","NIGHT_ROUND","Police","Town","_toText","round","_toText2","_toRoundText","_roleIsForThisRound","ROUND_ACTION","SAVED_BY_DOCTOR","KILLED_IN_NIGHT","LYNCHED","SELF_DEFENCE","GUILTY","INNOCENT","NOTHING","DEFAULT_ROUNDS_ORDER","DEFAULT_PLAYER","name","alive","DEFAULT_GAME_SETTINGS","createHashFromPlayers","players","hash","i","length","WelcomePage","props","parent","state","gameStep","setState","React","Component","GameSetupPage","nightOrder","map","PlayersSetupPage","window","debugMode","timesUsedBullet","timesSavedHimself","e","target","select","value","parseInt","Object","assign","player","index","keys","console","log","NightPage","calculateNight","bind","renderPlayer","renderDay","renderNight","renderSelectable","renderVeteran","wasProtectedByDoctor","wasSelfDefence","isGuilty","getRoleIndex","getNameIndex","getRoleAlive","countSpecial","resetBetweenRounds","prepareForNextNight","getResultMessage","createHash","night","doctorSelected","veteranSelected","includes","filter","special","count","selectedPlayer","auxSelected","auxUnique","auxActivated","veteranButton","vampireMode","nightCurrentState","nightCurrentOrderIndex","veteranKills","veteranUsedTheBullet","townSelected","action","mafiaSelected","push","selectedPlayerRole","serialkillerSelected","vigilanteSelected","clownSelected","policeSelected","policeVeteranSelected","police","doctorVeteranSelected","settings","onClick","className","result","message","__html","person","roundName","_result","dayNumber","index2","isNight","scrollTo","title","subtitle","sort","player1","player2","playersLength","currentRoundPlayers","lastNight","alert","undefined","GeneratorPage","MainPage","gameSettings","slice","packCompresser","JsonUrl","location","decompress","then","json","compress","output","displayBlock","ReactDOM","render","document","getElementById"],"mappings":"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","file":"scripts.319dda8e.map","sourceRoot":"..","sourcesContent":["const GAME_STEP = {\n    WELCOME: 0,\n    GAME_SETUP: 2,\n    PLAYERS_SETUP: 3,\n    NIGHT: 4,\n\n    GENERATOR: 99\n}\n\nconst PLAYER_ROLES = {\n    Mafia: {\n        text: \"Mafiot\",\n        id: 0\n    },\n    Godfather: {\n        text: \"Godfather\",\n        id: 1\n    },\n    Serialkiller: {\n        text: \"Serial killer\",\n        id: 2\n    },\n    Veteran: {\n        text: \"Veteran\",\n        id: 3\n    },\n    Vigilante: {\n        text: \"Vigilentul\",\n        id: 4\n    },\n    Policeman: {\n        text: \"Politist\",\n        id: 5\n    },\n    Doctor: {\n        text: \"Medic\",\n        id: 6\n    },\n    Mayor: {\n        text: \"Primar\",\n        id: 7\n    },\n    Clown: {\n        text: \"Mascarici\",\n        id: 8\n    },\n    Citizen: {\n        text: \"Cetatean\",\n        id: 9\n    }\n};\n\nfunction roleIsInnocent(role) {\n    return !(role == \"Mafia\" || role == \"Serialkiller\");\n}\n\nconst NIGHT_ROUND = {\n    Mafia: 0,\n    Serialkiller: 1,\n    Vigilante: 2,\n    Veteran: 3,\n    Police: 4,\n    Doctor: 5,\n    Clown: 6,\n    Town: 7,\n\n    _toText: (round) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return \"Mafia\";\n            case NIGHT_ROUND.Serialkiller: return \"Serialkillerului\";\n            case NIGHT_ROUND.Vigilante: return \"Vigilentului\";\n            case NIGHT_ROUND.Veteran: return \"Veteranului\";\n            case NIGHT_ROUND.Police: return \"Politistii\";\n            case NIGHT_ROUND.Doctor: return \"Doctorii\";\n            case NIGHT_ROUND.Clown: return \"Mascariciului\";\n            case NIGHT_ROUND.Town: return \"Orasul\";\n        }\n\n        return \"Error\";\n    },\n\n    _toText2: (round) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return \"Mafia\";\n            case NIGHT_ROUND.Serialkiller: return \"Serialkillerul\";\n            case NIGHT_ROUND.Vigilante: return \"Vigilentul\";\n            case NIGHT_ROUND.Veteran: return \"Veteranul\";\n            case NIGHT_ROUND.Police: return \"Politistii\";\n            case NIGHT_ROUND.Doctor: return \"Doctorii\";\n            case NIGHT_ROUND.Clown: return \"Mascariciul\";\n            case NIGHT_ROUND.Town: return \"Orasul\";\n        }\n\n        return \"Error\";\n    },\n\n    _toRoundText: (round) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return \"Runda mafiotilor\";\n            case NIGHT_ROUND.Serialkiller: return \"Runda serialkillerului\";\n            case NIGHT_ROUND.Vigilante: return \"Runda vigilentului\";\n            case NIGHT_ROUND.Veteran: return \"Runda veteranului\";\n            case NIGHT_ROUND.Police: return \"Runda politistilor\";\n            case NIGHT_ROUND.Doctor: return \"Runda doctorilor\";\n            case NIGHT_ROUND.Clown: return \"Runda mascariciului\";\n        }\n\n        return \"Error\";\n    },\n\n    _roleIsForThisRound: (round, role) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return role == \"Mafia\" || role == \"Godfather\";\n            case NIGHT_ROUND.Serialkiller: return role == \"Serialkiller\";\n            case NIGHT_ROUND.Vigilante: return role == \"Vigilante\";\n            case NIGHT_ROUND.Veteran: return role == \"Veteran\";\n            case NIGHT_ROUND.Police: return role == \"Policeman\";\n            case NIGHT_ROUND.Doctor: return role == \"Doctor\";\n            case NIGHT_ROUND.Clown: return role == \"Clown\";\n        }\n\n        return false;\n    }\n};\n\nconst ROUND_ACTION = {\n    SAVED_BY_DOCTOR: 0,\n    KILLED_IN_NIGHT: 1,\n    LYNCHED: 2,\n    SELF_DEFENCE: 3,\n    GUILTY: 4,\n    INNOCENT: 5,\n    NOTHING: 6\n}\n\nconst DEFAULT_ROUNDS_ORDER = [ \n    NIGHT_ROUND.Mafia, \n    NIGHT_ROUND.Serialkiller, \n    NIGHT_ROUND.Police, \n    NIGHT_ROUND.Vigilante,\n    NIGHT_ROUND.Doctor,\n    NIGHT_ROUND.Veteran\n];\n\nconst DEFAULT_PLAYER = {\n    name: \"\",\n    role: \"Citizen\",\n    alive: true\n};\n\nconst DEFAULT_GAME_SETTINGS = {\n\n};\n\nfunction createHashFromPlayers(players) {\n    let hash = \"\";\n    for (let i=0, length=players.length; i < length; ++i) {\n        hash += players[i].name + \"|\" + PLAYER_ROLES[players[i].role].id + \"|\" + (players[i].alive ? \"1\" : \"0\") + \"&\";\n    }\n\n    return hash;\n}\n\nclass WelcomePage extends React.Component {\n    render() {\n        return (\n            <div id=\"welcomePage\" className=\"main\">\n                <h1>Mafia Storyteller Helper</h1>\n                <h2>Created by Aykelith@NiAl</h2>\n                <button \n                    id=\"startBtn\"\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.GAME_SETUP;\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Start\n                </button>\n                <button\n                    id=\"generatorBtn\"\n                    onClick={() => {\n\n                    }}\n                >\n                    Generator\n                </button>\n            </div>\n        );\n    }\n};\n\nclass GameSetupPage extends React.Component {\n    render() {\n        return (\n            <div id=\"gameSetupPage\" className=\"main\">\n                <h2>Game Setup</h2>\n                <div className=\"block\">\n                    <div>Ordinea noptilor:</div>\n                    <div id=\"nightsOrderCnt\">\n                        {\n                            this.props.parent.state.nightOrder.map(round => {\n                                return (\n                                    <div key={`round${round}`}>\n                                        <span>{NIGHT_ROUND._toText2(round)}</span>\n                                        <div>\n                                            \n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <button\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.PLAYERS_SETUP;\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Urmatorul\n                </button>\n            </div>\n        )\n    }\n}\n\nclass PlayersSetupPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (window.debugMode) {\n            this.props.parent.state.players = [\n                { name: \"Mafia 1\", role: \"Mafia\", alive: true },\n                { name: \"Mafia 2\", role: \"Mafia\", alive: true },\n                { name: \"Godfather\", role: \"Godfather\", alive: true },\n                { name: \"Policeman\", role: \"Policeman\", alive: true },\n                { name: \"Policeman 2\", role: \"Policeman\", alive: true },\n                { name: \"Veteran\", role: \"Veteran\", alive: true, timesUsedBullet: 0 },\n                { name: \"Vigilante\", role: \"Vigilante\", alive: true },\n                { name: \"Doctor\", role: \"Doctor\", alive: true, timesSavedHimself: 0 },\n                { name: \"Mayor\", role: \"Mayor\", alive: true },\n                { name: \"Clown\", role: \"Clown\", alive: true },\n                { name: \"Serialkiller\", role: \"Serialkiller\", alive: true }\n            ]\n        }\n    }\n    \n    render() {\n        return (\n            <div id=\"playersSetupPage\" className=\"main\">\n                <h2>Players setup</h2>\n                <div>\n                    <span>Numarul de jucatori: </span>\n                    <input\n                        type=\"number\"\n                        value={this.props.parent.state.players.length}\n                        onClick={e => e.target.select()}\n                        onChange={e => {\n                            const value = parseInt(e.target.value);\n\n                            if (value == 0) {\n                                this.props.parent.state.players = [];\n                                return;\n                            }\n\n                            this.props.parent.state.players.length = value;\n\n                            for (let i=0, length = this.props.parent.state.players.length; i < length; ++i) {\n                                if (!this.props.parent.state.players[i]) {\n                                    this.props.parent.state.players[i] = Object.assign({}, DEFAULT_PLAYER);\n                                }\n                            }\n\n                            this.props.parent.setState(this.props.parent.state);\n                        }}\n                    />\n                </div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Nr</th>\n                            <th>Nume</th>\n                            <th>Rol</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.props.parent.state.players.map((player, index) => {\n                                return (\n                                    <tr key={`player${index}`}>\n                                        <td>{index}</td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={player.name}\n                                                onChange={e => {\n                                                    this.props.parent.state.players[index].name = e.target.value;\n                                                    this.props.parent.setState(this.props.parent.state);\n                                                }}\n                                            />\n                                        </td>\n                                        <td>\n                                            <select\n                                                value={player.role}\n                                                onChange={e => {\n                                                    this.props.parent.state.players[index].role = e.target.value;\n\n                                                    if (e.target.value == \"Doctor\") {\n                                                        this.props.parent.state.players[index].timesSavedHimself = 0;\n                                                    }\n\n                                                    if (e.target.value == \"Veteran\") {\n                                                        this.props.parent.state.players[index].timesUsedBullet = 0;\n                                                    }\n\n                                                    this.props.parent.setState(this.props.parent.state);\n                                                }}\n                                            >\n                                                {\n                                                    Object.keys(PLAYER_ROLES).map(role => {\n                                                        return <option key={role} value={role}>{PLAYER_ROLES[role].text}</option>;\n                                                    })\n                                                }\n                                            </select>\n                                        </td>\n                                        <td></td>\n                                    </tr>\n                                );\n                            })\n                        }\n                    </tbody>\n                </table>\n                <button\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.NIGHT;\n                        console.log(this.props.parent.state.players);\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Incepe jocul\n                </button>\n            </div>\n        )\n    }\n}\n\nclass NightPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.calculateNight = this.calculateNight.bind(this);\n\n        this.renderPlayer = this.renderPlayer.bind(this);\n\n        this.renderDay = this.renderDay.bind(this);\n        this.renderNight = this.renderNight.bind(this);\n\n        this.renderSelectable = this.renderSelectable.bind(this);\n        this.renderVeteran = this.renderVeteran.bind(this);\n\n        this.wasProtectedByDoctor = this.wasProtectedByDoctor.bind(this);\n        this.wasSelfDefence = this.wasSelfDefence.bind(this);\n        this.isGuilty = this.isGuilty.bind(this);\n        this.getRoleIndex = this.getRoleIndex.bind(this);\n        this.getNameIndex = this.getNameIndex.bind(this);\n        this.getRoleAlive = this.getRoleAlive.bind(this);\n        this.countSpecial = this.countSpecial.bind(this);\n\n        this.resetBetweenRounds = this.resetBetweenRounds.bind(this);\n        this.prepareForNextNight = this.prepareForNextNight.bind(this);\n        \n        this.getResultMessage = this.getResultMessage.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.parent.createHash();\n    }\n\n    wasProtectedByDoctor(index) { return this.props.parent.state.night.doctorSelected == index; }\n    wasSelfDefence(index) { return this.props.parent.state.night.veteranSelected == index };\n    isGuilty(index) { return ['Mafia', 'Serialkiller'].includes(this.props.parent.state.players[index].role); }\n    getRoleIndex(role) { \n        for (let i=0, length=this.props.parent.state.players.length; i < length; ++i) {\n            if (this.props.parent.state.players[i].role == role && this.props.parent.state.players[i].alive) return i;\n        } \n\n        return null;\n    }\n    getRoleAlive(role) {\n        return this.props.parent.state.players\n            .filter(player => NIGHT_ROUND._roleIsForThisRound(role, player.role) && player.alive);\n    }\n    getNameIndex(name) {\n        for (let i=0, length=this.props.parent.state.players.length; i < length; ++i) {\n            if (this.props.parent.state.players[i].name == name) return i;\n        } \n\n        return null;\n    }\n    countSpecial(special) {\n        let count = 0;\n        for (let i=0, length=this.props.parent.state.players.length; i < length; ++i) {\n            if (this.props.parent.state.players[i][special]) count += this.props.parent.state.players[i][special];\n        } \n\n        return count;\n    }\n\n    resetBetweenRounds() {\n        this.state.selectedPlayer = null;\n        this.state.auxSelected = null;\n        this.state.auxUnique = false;\n        this.state.auxActivated = false;\n        this.state.veteranButton = null;\n    }\n\n    prepareForNextNight(vampireMode) {\n        this.props.parent.state.nightCurrentState = vampireMode ? NIGHT_ROUND.Clown : this.props.parent.state.nightOrder[this.props.parent.state.nightCurrentOrderIndex];\n\n        if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor) {\n            this.state.auxActivated = true;\n            this.state.auxUnique = true;\n        }\n    }\n\n    calculateNight() {\n        let night = this.props.parent.state.night;\n        night.veteranKills = [];\n\n        let veteranUsedTheBullet = false;\n\n        console.log(\"NIGHT\", night);\n\n        if (night.townSelected != null) {\n            console.log(\"TOWN\", night.townSelected, this.props.parent.state.players[night.townSelected]);\n            night.townSelected = { id: night.townSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n        }\n\n        if (night.mafiaSelected != null) {\n            console.log(\"MAFIA\", night.mafiaSelected, this.props.parent.state.players[night.mafiaSelected]);\n            let action;\n            if (this.wasSelfDefence(night.mafiaSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.mafiaSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Godfather');\n                night.veteranKills.push(id);\n\n                this.props.parent.state.players[id].alive = false;\n\n                action = ROUND_ACTION.SELF_DEFENCE;\n            } else if (this.wasProtectedByDoctor(night.mafiaSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                action = ROUND_ACTION.SAVED_BY_DOCTOR;\n            } else {\n                let selectedPlayerRole = this.props.parent.state.players[night.mafiaSelected].role;\n\n                if (selectedPlayerRole == \"Serialkiller\") {\n                    action = ROUND_ACTION.NOTHING;\n                } else {\n                    this.props.parent.state.players[night.mafiaSelected].alive = false;\n                    action = ROUND_ACTION.KILLED_IN_NIGHT;\n                }\n            }\n\n            night.mafiaSelected = { id: night.mafiaSelected, action: action };\n        }\n        \n        if (night.serialkillerSelected != null) {\n            console.log(\"SERIALKILLER\", night.serialkillerSelected, this.props.parent.state.players[night.serialkillerSelected]);\n\n            let action;\n            if (this.wasSelfDefence(night.serialkillerSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.serialkillerSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Serialkiller');\n                night.veteranKills.push(id);\n\n                this.props.parent.state.players[id].alive = false;\n\n                action = ROUND_ACTION.SELF_DEFENCE;\n            } else if (this.wasProtectedByDoctor(night.serialkillerSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                action = ROUND_ACTION.SAVED_BY_DOCTOR;\n            } else {\n                let selectedPlayerRole = this.props.parent.state.players[night.serialkillerSelected].role;\n\n                if (selectedPlayerRole == \"Mafia\" || selectedPlayerRole == \"Godfather\") {\n                    action = ROUND_ACTION.NOTHING;\n                } else {\n                    this.props.parent.state.players[night.serialkillerSelected].alive = false;\n                    action = ROUND_ACTION.KILLED_IN_NIGHT;\n                }\n            }\n\n            night.serialkillerSelected = { id: night.serialkillerSelected, action: action };\n        }\n        \n        if (night.vigilanteSelected != null) {\n            console.log(\"VIGILANTE\", night.vigilanteSelected, this.props.parent.state.players[night.vigilanteSelected]);\n\n            let action;\n            if (this.wasSelfDefence(night.vigilanteSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.vigilanteSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Vigilante');\n                night.veteranKills.push(id);\n\n                this.props.parent.state.players[id].alive = false;\n                \n                action = ROUND_ACTION.SELF_DEFENCE;\n            } else if (this.wasProtectedByDoctor(night.vigilanteSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                action = ROUND_ACTION.SAVED_BY_DOCTOR;\n            } else {\n                this.props.parent.state.players[night.vigilanteSelected].alive = false;\n                action = ROUND_ACTION.KILLED_IN_NIGHT;\n            }\n\n            night.vigilanteSelected = { id: night.vigilanteSelected, action: action };\n        }\n\n        if (night.clownSelected != null) {\n            console.log(\"CLOWN POWER\");\n            night.clownSelected = { id: night.clownSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n        }\n\n        if (night.policeSelected != null) {\n            console.log(\"POLICE\", night.policeSelected, this.props.parent.state.players[night.policeSelected]);\n\n            let action;\n            if (this.wasSelfDefence(night.policeSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet, night.policeVeteranSelected, this.props.parent.state.players[night.policeVeteranSelected]);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.policeSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                this.props.parent.state.players[night.policeVeteranSelected].alive = false;\n                action = ROUND_ACTION.SELF_DEFENCE;\n            } else {\n                action = 999;\n            }\n\n            night.policeSelected = { id: night.policeSelected, police: this.isGuilty(night.policeSelected) ? ROUND_ACTION.GUILTY : ROUND_ACTION.INNOCENT, action: action };\n        }\n        \n        if (night.doctorSelected != null) {\n            console.log(\"DOCTOR\", night.doctorSelected, this.props.parent.state.players[night.doctorSelected]);\n            if (this.wasSelfDefence(night.doctorSelected)) {\n                if (!night.doctorVeteranSelected) night.doctorVeteranSelected = this.getRoleIndex(\"Doctor\");\n\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet, night.doctorVeteranSelected, this.props.parent.state.players[night.doctorVeteranSelected]);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.doctorSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                this.props.parent.state.players[night.doctorVeteranSelected].alive = false;\n            } else if (this.props.parent.state.players[night.doctorSelected].role == \"Doctor\") {\n                ++this.props.parent.state.players[night.doctorSelected].timesSavedHimself;\n            }\n\n            night.doctorSelected = { id: night.doctorSelected };\n        }\n\n        if (night.veteranSelected != null && !veteranUsedTheBullet) {\n            ++this.props.parent.state.players[night.veteranSelected].timesUsedBullet;\n            veteranUsedTheBullet = true;\n        }\n    }\n\n    renderPlayer(player, settings) {\n        return (\n            <div onClick={settings.onClick} className={`${player.role} ${settings.className || \"\"}`}>\n                <div>{player.name} {window.debugMode && <span>({this.getNameIndex(player.name)})</span>}</div>\n                <div>{settings.role ? settings.role(player) : PLAYER_ROLES[player.role].text}</div>\n            </div>\n        )\n    }\n\n    getResultMessage(round, result, className) {\n        console.log(NIGHT_ROUND._toText(round), result);\n        if (result == null) {\n            if (round == NIGHT_ROUND.Town) {\n                return <div><span>Orasul a decis sa nu omoare pe nimeni</span></div>\n            }\n    \n            if (round == NIGHT_ROUND.Vigilante) {\n                return <div className={className}><span>Vigilentul a ales sa nu omoare</span></div>\n            }\n\n            if (round == NIGHT_ROUND.Veteran) {\n                return <div className={className}><span>Veteranul a ales sa nu-si foloseasca glontul</span></div>\n            }\n\n            return null;\n        }\n\n        if (round == NIGHT_ROUND.Veteran) {\n            let message = \"Veteranul si-a folosit glontul si-a omorat pe: \";\n\n            let count = this.props.parent.state.night.veteranKills.length;\n            for (let i=0, length=this.props.parent.state.night.veteranKills.length; i < length; ++i) {\n                message += `<b>${this.props.parent.state.players[this.props.parent.state.night.veteranKills[i]].name}(${PLAYER_ROLES[this.props.parent.state.players[this.props.parent.state.night.veteranKills[i]].role].text})</b>,`;\n            }\n\n            if (this.props.parent.state.night.policeVeteranSelected) {\n                ++count;\n                message += `<b>${this.props.parent.state.players[this.props.parent.state.night.policeVeteranSelected].name}(${PLAYER_ROLES[this.props.parent.state.players[this.props.parent.state.night.policeVeteranSelected].role].text})</b>,`;\n            }\n\n            if (this.props.parent.state.night.doctorVeteranSelected) {\n                ++count;\n                message += `<b>${this.props.parent.state.players[this.props.parent.state.night.doctorVeteranSelected].name}(${PLAYER_ROLES[this.props.parent.state.players[this.props.parent.state.night.doctorVeteranSelected].role].text})</b>,`;\n            }\n\n            return <div className={className}>{ count > 0 ? <span dangerouslySetInnerHTML={{ __html: message }}></span> : \"Veteranul si-a folosit glontul dar nu a omorat pe nimeni!\" }</div>;\n        }\n\n        if (round == NIGHT_ROUND.Doctor) {\n            let person = <b>{this.props.parent.state.players[result.id].name}({PLAYER_ROLES[this.props.parent.state.players[result.id].role].text})</b>;\n\n            for (let roundName in this.props.parent.state.night) {\n                let _result = this.props.parent.state.night[roundName];\n                if (typeof _result == 'object' && _result && _result.action == ROUND_ACTION.SAVED_BY_DOCTOR) {\n                    return <div className={className}><span>Doctorii au salvat pe cine trebuia! ({person})</span></div>;\n                }\n            }\n\n            return <div className={className}><span>Doctorii nu au salvat pe cine trebuia! ({person})</span></div>\n        }\n\n        if (round == NIGHT_ROUND.Police) {\n            return <div className={className}><span>Politistii au ales si a iesit {result.police == ROUND_ACTION.GUILTY ? \"necurat\" : \"curat\"} (<b>{this.props.parent.state.players[result.id].name}({PLAYER_ROLES[this.props.parent.state.players[result.id].role].text})</b>)</span></div>\n        }\n\n        if (result.action == ROUND_ACTION.KILLED_IN_NIGHT) {\n            return <div className={className}><span>{NIGHT_ROUND._toText2(round)} au omorat pe <b>{this.props.parent.state.players[result.id].name}({PLAYER_ROLES[this.props.parent.state.players[result.id].role].text})</b></span></div>;\n        } else if (result.action == ROUND_ACTION.SAVED_BY_DOCTOR || result.action == ROUND_ACTION.SELF_DEFENCE) {\n            return <div className={className}><span>{NIGHT_ROUND._toText2(round)} nu au reusit sa omoare pe nimeni (<b>{this.props.parent.state.players[result.id].name}({PLAYER_ROLES[this.props.parent.state.players[result.id].role].text})</b>)</span></div>;\n        }\n\n        if (result.action == ROUND_ACTION.NOTHING) {\n            return <div className={className}><span>{NIGHT_ROUND._toText2(round)} nu au omorat pe nimeni (<b>{this.props.parent.state.players[result.id].name}({PLAYER_ROLES[this.props.parent.state.players[result.id].role].text})</b>)</span></div>\n        }\n\n        return null;\n    }\n\n    renderDay() {\n        console.log(\"RRR\", this.props.parent.state.night);\n\n        return (\n            <div id=\"nightPage_day\" className=\"main\">\n                <h2 id=\"dayNumber\">Ziua {this.props.parent.state.dayNumber}</h2>\n                {\n                    this.props.parent.state.night\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Noaptea trecuta</h3>\n                        { this.getResultMessage(NIGHT_ROUND.Town, this.props.parent.state.night.townSelected) }\n                        { this.getResultMessage(NIGHT_ROUND.Mafia, this.props.parent.state.night.mafiaSelected, \"Mafia\") }\n                        { this.getResultMessage(NIGHT_ROUND.Serialkiller, this.props.parent.state.night.serialkillerSelected, \"Serialkiller\") }\n                        { this.getResultMessage(NIGHT_ROUND.Police, this.props.parent.state.night.policeSelected, \"Policeman\") }\n                        { this.getResultMessage(NIGHT_ROUND.Vigilante, this.props.parent.state.night.vigilanteSelected, \"Vigilante\") }\n                        { this.getResultMessage(NIGHT_ROUND.Doctor, this.props.parent.state.night.doctorSelected, \"Doctor\") }\n                        { this.getResultMessage(NIGHT_ROUND.Veteran, this.props.parent.state.night.veteranSelected, \"Veteran\") }\n                        { this.getResultMessage(NIGHT_ROUND.Clown, this.props.parent.state.night.clownSelected, \"Clown\") }\n                    </div>\n                }\n                <div className=\"playersStatusCnt\">\n                    <h3>Lista jucatori</h3>\n                    <h4>(selecteaza un jucator pentru a-l linsa)</h4>\n                    {\n                        this.props.parent.state.players\n                            .map((player, index) => {\n                            let index2 = this.getNameIndex(player.name);\n\n                            return this.renderPlayer(\n                                player, \n                                {\n                                    className: `${this.state.selectedPlayer == index2 ? \"selected\" : \"\"} ${!player.alive ? \"deleted\" : \"\"}`, \n                                    onClick: () => {\n                                        if (!player.alive) return;\n\n                                        this.state.selectedPlayer = this.state.selectedPlayer == index2 ? null : index2;\n                                        this.setState(this.state);\n                                    }\n                                }\n                            );\n                        })\n                    }\n                </div>\n                <button\n                    id=\"startNightBtn\"\n                    onClick={e => {\n                        this.props.parent.state.night = { townSelected: this.state.selectedPlayer }\n                        if (this.state.selectedPlayer) {\n                            this.props.parent.state.players[this.state.selectedPlayer].alive = false;\n\n                            if (this.props.parent.state.players[this.state.selectedPlayer].role == \"Clown\") {\n                                this.state.vampireMode = true;\n                            }\n                        }\n\n                        this.state.selectedPlayer = null;\n                        this.state.auxSelected = null;\n                        this.state.auxActivated = false;\n                        this.state.auxUnique = false;\n                        this.state.veteranButton = null;\n\n                        this.props.parent.state.isNight = true;\n                        ++this.props.parent.state.dayNumber;\n                        this.props.parent.state.nightCurrentState = this.props.parent.state.nightOrder[0];\n                        this.props.parent.state.nightCurrentOrderIndex = 0;\n\n                        if (this.getRoleIndex(\"Godfather\") == null) {\n                            this.state.auxActivated = true;\n                        }\n\n                        this.props.parent.setState(this.props.parent.state, () => { window.scrollTo(0,0); });\n\n                        console.log(\"PLAYERS\", this.props.parent.state.players);\n                    }}\n                >\n                    Incepe noaptea\n                </button>\n            </div>\n        )\n    }\n\n    renderSelectable(settings) {\n        console.log(\"SETTINGS\", settings);\n        return (\n            <div id=\"mafiaStep\" className=\"nightStep\">\n                <div className=\"playersStatusCnt\">\n                    <h3>{settings.title}</h3>\n                    <h4>{settings.subtitle}</h4>\n                    {\n                        this.props.parent.state.players\n                            .filter(player => !NIGHT_ROUND._roleIsForThisRound(this.props.parent.state.nightCurrentState, player.role) && player.alive)\n                            .sort(settings.filter ? settings.filter : (player1, player2) => player1.role > player2.role)\n                            .map((player, index) => {\n                            let index2 = this.getNameIndex(player.name);\n                            return this.renderPlayer(\n                                player, \n                                Object.assign(\n                                    {\n                                        className: settings.className ? \n                                            `${this.state.selectedPlayer == index2 ? \"selected\" : \"\"} ${settings.className(player, index2)}` : \n                                            this.state.selectedPlayer == index2 && \"selected\", \n                                        onClick: () => {\n                                            if (settings.playersLength == 0) return;\n\n                                            this.state.selectedPlayer = this.state.selectedPlayer == index2 ? null : index2;\n                                            if (this.state.auxUnique) this.state.auxSelected = null;\n                                            this.setState(this.state);\n                                        },\n                                    }, \n                                    settings.player || {}\n                                )\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    renderVeteran() {\n        return (\n            <div id=\"veteranStep\" className=\"nightStep\">\n                <h3>Vrei sa folosesti glontul?</h3>\n                <div id=\"buttonsCnt\">\n                    <button \n                        className={this.state.veteranButton == 1 && 'selected'}\n                        onClick={() => {\n                            this.props.parent.state.night.veteranSelected = this.getRoleIndex('Veteran');\n                            this.state.veteranButton = 1;\n                            this.setState(this.state);\n                        }}\n                    >\n                        Da\n                    </button>\n                    <button \n                        className={this.state.veteranButton == 2 && 'selected'}\n                        onClick={() => {\n                            this.props.parent.state.night.veteranSelected = null;\n                            this.state.veteranButton = 2;\n                            this.setState(this.state);\n                        }}\n                    >\n                        Nu\n                    </button>\n                </div>\n                {\n                    this.props.parent.state.night.veteranSelected\n                    &&\n                    this.props.parent.state.night.policeSelected == this.props.parent.state.night.veteranSelected\n                    && \n                    this.getRoleAlive(NIGHT_ROUND.Police).length > 1\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Lista politisti</h3>\n                        <h4>(selecteaza un politist pentru a-l omori)</h4>\n                        {\n                            this.getRoleAlive(NIGHT_ROUND.Police).map((player, index) => {\n                                let index2 = this.getNameIndex(player.name);\n                                return this.renderPlayer(player, \n                                    {\n                                        className: this.props.parent.state.night.policeVeteranSelected == index2 && \"selected\", \n                                        onClick: () => {\n                                            this.props.parent.state.night.policeVeteranSelected = this.props.parent.state.night.policeVeteranSelected == index2 ? null : index2;\n                                            this.props.parent.setState(this.props.parent.state);\n                                        }\n                                    }\n                                );\n                            })\n                        }\n                    </div>\n                }\n                {\n                    this.props.parent.state.night.veteranSelected\n                    &&\n                    this.props.parent.state.night.doctorSelected == this.props.parent.state.night.veteranSelected\n                    && \n                    this.getRoleAlive(NIGHT_ROUND.Doctor).length > 1\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Lista doctori</h3>\n                        <h4>(selecteaza un doctor pentru a-l omori)</h4>\n                        {\n                            this.getRoleAlive(NIGHT_ROUND.Doctor).map((player, index) => {\n                                let index2 = this.getNameIndex(player.name);\n                                return this.renderPlayer(player, this.props.parent.state.night.doctorVeteranSelected == index2 && \"selected\", () => {\n                                    this.props.parent.state.night.doctorVeteranSelected = this.props.parent.state.night.doctorVeteranSelected == index2 ? null : index2;\n                                    this.props.parent.setState(this.props.parent.state);\n                                });\n                            })\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    renderNight() {\n        let currentRoundPlayers = this.props.parent.state.players\n            .filter(player => NIGHT_ROUND._roleIsForThisRound(this.props.parent.state.nightCurrentState, player.role) && player.alive)\n            .sort((player1, player2) => player1.role > player2.role);\n            \n        return (\n            <div id=\"nightPage_night\" className=\"main\">\n                <h1>{NIGHT_ROUND._toRoundText(this.props.parent.state.nightCurrentState)}</h1>\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor\n                    &&\n                    <div className=\"specialCnt\">Medicii s-or salvat pe ei de {this.countSpecial(\"timesSavedHimself\")} ori</div>\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Veteran\n                    &&\n                    <div className=\"specialCnt\">Veteranul o folosit glontul de {this.countSpecial(\"timesUsedBullet\")} ori</div>\n                }\n                <div className=\"playersStatusCnt\">\n                    <h3>Lista jucatori</h3>\n                    {\n                        currentRoundPlayers.map((player, index) => {\n                            let index2 = this.getNameIndex(player.name);\n                            return this.renderPlayer(player, \n                                {\n                                    className: this.state.auxActivated && this.state.auxSelected == index2 && \"selected\", \n                                    onClick: () => {\n                                        this.state.auxSelected = this.state.auxSelected == index2 ? null : index2;\n                                        if (this.state.auxUnique) this.state.selectedPlayer = null;\n                                        this.setState(this.state);\n                                    }\n                                }\n                            );\n                        })\n                    }\n                </div>\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Mafia\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima)\", playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Serialkiller\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima)\", playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Police\n                    &&\n                    this.renderSelectable({ \n                        title: \"Posibili criminali\", \n                        subtitle: \"(selecteaza un jucator)\",\n                        filter: (player1, player2) => roleIsInnocent(player1.role) > roleIsInnocent(player2.role),\n                        className: (player, index) => roleIsInnocent(player.role) ? \"innocent\" : \"guilty\",\n                        player: {\n                            role: (player) => `${roleIsInnocent(player.role) ? \"Inocent\" : \"Vinovant\"} (${PLAYER_ROLES[player.role].text})`\n                        }, \n                        playersLength: currentRoundPlayers.length \n                    })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Vigilante\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima sau nu)\", playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima sau nu)\", playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Veteran && currentRoundPlayers.length > 0\n                    &&\n                    this.renderVeteran()\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Clown\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima)\", playersLength: 1 })\n                }\n                <div id=\"buttonsCnt\">\n                    <button\n                        id=\"backState\"\n                        onClick={() => {\n                            this.resetBetweenRounds();\n\n                            --this.props.parent.state.nightCurrentOrderIndex;\n                            if (this.props.parent.state.nightCurrentOrderIndex == -1) {\n                                this.props.parent.state.isNight = false;\n                                --this.props.parent.state.dayNumber;\n                                this.props.parent.state.night = Object.assign({}, this.props.parent.state.lastNight);\n                            } else {\n                                this.prepareForNextNight();\n                            }\n\n                            this.props.parent.setState(this.props.parent.state, () => { window.scrollTo(0,0); });\n                        }}\n                    >\n                        Inapoi\n                    </button>\n                    <button \n                        id=\"nextState\"\n                        onClick={() => {\n                            if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Mafia) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                if (currentRoundPlayers.length > 0 && this.getRoleIndex(\"Godfather\") == null) {\n                                    if (this.state.auxSelected == null) return alert(\"Selecteaza noul Godfather\");\n                                    else {\n                                        this.props.parent.state.players[this.state.auxSelected].role = \"Godfather\";\n                                    }\n                                }\n\n                                this.props.parent.state.night.mafiaSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Serialkiller) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.serialkillerSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Police) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.policeSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Vigilante) {\n                                this.props.parent.state.night.vigilanteSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Veteran) {\n                                if (currentRoundPlayers.length > 0) {\n                                    if (!this.state.veteranButton || this.props.parent.state.night.veteranSelected === undefined) {\n                                        return alert(\"Selecteaza DA sau NU\");\n                                    }\n    \n                                    if (this.props.parent.state.night.veteranSelected) {\n                                        if (this.props.parent.state.night.policeSelected == this.props.parent.state.night.veteranSelected && this.getRoleAlive(NIGHT_ROUND.Police).length > 1 && !this.props.parent.state.night.policeVeteranSelected) {\n                                            return alert(\"Selecteaza un politist\");\n                                        }\n    \n                                        if (this.props.parent.state.night.doctorSelected == this.props.parent.state.night.veteranSelected && this.getRoleAlive(NIGHT_ROUND.Doctor).length > 1 && !this.props.parent.state.night.doctorVeteranSelected) {\n                                            return alert(\"Selecteaza un doctor\");\n                                        }\n    \n                                        console.log(\"police\", this.props.parent.state.night.policeVeteranSelected);\n                                    }\n                                }\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null && this.state.auxSelected == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.doctorSelected = this.state.selectedPlayer || this.state.auxSelected;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Clown) {\n                                if (this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.clownSelected = this.state.selectedPlayer;\n                                this.state.vampireMode = false;\n                                console.log(\"CLOOOWN\");\n                            }\n\n                            this.resetBetweenRounds();\n\n                            ++this.props.parent.state.nightCurrentOrderIndex;\n\n                            if (this.props.parent.state.nightCurrentOrderIndex >= this.props.parent.state.nightOrder.length) {\n                                if (this.state.vampireMode) {\n                                    this.prepareForNextNight(true);\n                                } else {\n                                    this.calculateNight();\n                                    this.props.parent.state.lastNight = Object.assign({}, this.props.parent.state.night);\n                                    this.props.parent.state.isNight = false;\n\n                                    this.props.parent.createHash();\n                                }\n                            } else {\n                                this.prepareForNextNight();\n                            }\n                            \n                            this.props.parent.setState(this.props.parent.state, () => { window.scrollTo(0,0); });\n                        }}\n                    >\n                        Urmatorul\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return this.props.parent.state.isNight ? this.renderNight() : this.renderDay();\n    }\n}\n\nclass GeneratorPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        <div id=\"generatorPage\" className=\"main\">\n            <h2>Generator</h2>\n            <div id=\"presetCnt\">\n                <div id=\"presetSelectCnt\">\n                    <span>Preset:</span>\n                </div>\n            </div>\n        </div>\n    }\n};\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gameStep: GAME_STEP.WELCOME,\n            gameSettings: Object.assign({}, DEFAULT_GAME_SETTINGS),\n\n            players: [],\n            nightOrder: DEFAULT_ROUNDS_ORDER.slice(),\n\n            dayNumber: 1,\n            isNight: false,\n\n            nightCurrentState: null,\n            nightCurrentOrderIndex: 0,\n            night: null,\n            lastNight: null\n        };\n\n        this.createHash = this.createHash.bind(this);\n    }\n\n    componentDidMount() {\n        window.packCompresser = window.JsonUrl('pack'); // JsonUrl is added to the window object\n\n        if (window.location.hash) {\n            window.packCompresser.decompress(window.location.hash)\n                .then(json => { \n                    Object.assign(this.state, json);\n\n                    this.state.lastNight = Object.assign({}, this.state.night);\n\n                    this.state.gameStep = GAME_STEP.NIGHT;\n                    this.setState(this.state);\n                });\n        }\n    }\n\n    createHash() {\n        window.packCompresser.compress(\n            { \n                players: this.state.players, \n                night: this.state.night,\n                dayNumber: this.state.dayNumber\n            }\n        ).then(output => window.location.hash = output);\n    }\n\n    render() {\n        let displayBlock = null;\n        if (this.state.gameStep == GAME_STEP.WELCOME) displayBlock = <WelcomePage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.GAME_SETUP) displayBlock = <GameSetupPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.PLAYERS_SETUP) displayBlock = <PlayersSetupPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.NIGHT) displayBlock = <NightPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.GENERATOR) displayBlock = <GeneratorPage parent={this}/>\n\n        return displayBlock;\n    }\n};\n\nReactDOM.render(\n    <MainPage/>,\n    document.getElementById('root')\n);"]}