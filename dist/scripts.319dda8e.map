{"version":3,"sources":["scripts/index.js"],"names":["GAME_STEP","WELCOME","GAME_SETUP","PLAYERS_SETUP","NIGHT","GENERATOR","PLAYER_ROLES","Mafia","text","id","Godfather","Serialkiller","Veteran","Vigilante","Policeman","Doctor","Mayor","Clown","roleIsInnocent","role","NIGHT_ROUND","Police","_toText","round","_toRoundText","_roleIsForThisRound","ROUND_ACTION","SAVED_BY_DOCTOR","KILLED_IN_NIGHT","LYNCHED","SELF_DEFENCE","GUILTY","INNOCENT","DEFAULT_ROUNDS_ORDER","DEFAULT_PLAYER","name","alive","DEFAULT_GAME_SETTINGS","createHashFromPlayers","players","hash","i","length","WelcomePage","props","parent","state","gameStep","setState","React","Component","GameSetupPage","nightOrder","map","PlayersSetupPage","parseInt","e","target","value","Object","assign","player","index","keys","NightPage","calculateNight","bind","renderPlayer","renderDay","renderNight","renderSelectable","renderVeteran","wasProtectedByDoctor","wasSelfDefence","isGuilty","getRoleIndex","getRoleAlive","getResultMessage","createHash","night","doctorSelected","veteranSelected","includes","filter","otherDeaths","veteranUsedTheBullet","mafiaSelected","console","log","bullets","action","serialkillerSelected","vigilanteSelected","policeSelected","policeVeteranSelected","push","doctorVeteranSelected","settings","onClick","className","result","dayNumber","selectedPlayer","auxSelected","auxActivated","veteranButton","isNight","nightCurrentState","nightCurrentOrderIndex","title","subtitle","sort","player1","player2","currentRoundPlayers","required","alert","undefined","GeneratorPage","MainPage","gameSettings","slice","nights","decodedURI","decodeURIComponent","window","location","token1","indexOf","playersString","substring","split","chars","token2","day","displayBlock","ReactDOM","render","document","getElementById"],"mappings":"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","file":"scripts.319dda8e.map","sourceRoot":"..","sourcesContent":["const GAME_STEP = {\n    WELCOME: 0,\n    GAME_SETUP: 2,\n    PLAYERS_SETUP: 3,\n    NIGHT: 4,\n\n    GENERATOR: 99\n}\n\nconst PLAYER_ROLES = {\n    Mafia: {\n        text: \"Mafiot\",\n        id: 0\n    },\n    Godfather: {\n        text: \"Capul mafiei\",\n        id: 1\n    },\n    Serialkiller: {\n        text: \"Serial killer\",\n        id: 2\n    },\n    Veteran: {\n        text: \"Veteran\",\n        id: 3\n    },\n    Vigilante: {\n        text: \"Vigilentul\",\n        id: 4\n    },\n    Policeman: {\n        text: \"Politist\",\n        id: 5\n    },\n    Doctor: {\n        text: \"Medic\",\n        id: 6\n    },\n    Mayor: {\n        text: \"Primar\",\n        id: 7\n    },\n    Clown: {\n        text: \"Mascarici\",\n        id: 8\n    }\n};\n\nfunction roleIsInnocent(role) {\n    return !(role == \"Mafia\" || role == \"Serialkiller\");\n}\n\nconst NIGHT_ROUND = {\n    Mafia: 0,\n    Serialkiller: 1,\n    Vigilante: 2,\n    Veteran: 3,\n    Police: 4,\n    Doctor: 5,\n    Clown: 6,\n\n    _toText: (round) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return \"Mafia\";\n            case NIGHT_ROUND.Serialkiller: return \"Serialkillerii\";\n            case NIGHT_ROUND.Vigilante: return \"Vigilentii\";\n            case NIGHT_ROUND.Veteran: return \"Veteranii\";\n            case NIGHT_ROUND.Police: return \"Politistii\";\n            case NIGHT_ROUND.Doctor: return \"Doctorii\";\n            case NIGHT_ROUND.Clown: return \"Mascaricii\";\n        }\n\n        return \"Error\";\n    },\n\n    _toRoundText: (round) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return \"Runda mafiotilor\";\n            case NIGHT_ROUND.Serialkiller: return \"Runda serialkiller-ilor\";\n            case NIGHT_ROUND.Vigilante: return \"Runda vigilentilor\";\n            case NIGHT_ROUND.Veteran: return \"Runda veteranilor\";\n            case NIGHT_ROUND.Police: return \"Runda politistilor\";\n            case NIGHT_ROUND.Doctor: return \"Runda doctorilor\";\n            case NIGHT_ROUND.Clown: return \"Runda mascariciilor\";\n        }\n\n        return \"Error\";\n    },\n\n    _roleIsForThisRound: (round, role) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return role == \"Mafia\" || role == \"Godfather\";\n            case NIGHT_ROUND.Serialkiller: return role == \"Serialkiller\";\n            case NIGHT_ROUND.Vigilante: return role == \"Vigilante\";\n            case NIGHT_ROUND.Veteran: return role == \"Veteran\";\n            case NIGHT_ROUND.Police: return role == \"Policeman\";\n            case NIGHT_ROUND.Doctor: return role == \"Doctor\";\n            case NIGHT_ROUND.Clown: return role == \"Clown\";\n        }\n\n        return false;\n    }\n};\n\nconst ROUND_ACTION = {\n    SAVED_BY_DOCTOR: 0,\n    KILLED_IN_NIGHT: 1,\n    LYNCHED: 2,\n    SELF_DEFENCE: 3,\n    GUILTY: 4,\n    INNOCENT: 5\n}\n\nconst DEFAULT_ROUNDS_ORDER = [ \n    NIGHT_ROUND.Mafia, \n    NIGHT_ROUND.Serialkiller, \n    NIGHT_ROUND.Police, \n    NIGHT_ROUND.Vigilante,\n    NIGHT_ROUND.Doctor,\n    NIGHT_ROUND.Veteran\n];\n\nconst DEFAULT_PLAYER = {\n    name: \"\",\n    role: -1,\n    alive: true\n};\n\nconst DEFAULT_GAME_SETTINGS = {\n\n};\n\nfunction createHashFromPlayers(players) {\n    let hash = \"\";\n    for (let i=0, length=players.length; i < length; ++i) {\n        hash += players[i].name + \"|\" + PLAYER_ROLES[players[i].role].id + \"|\" + (players[i].alive ? \"1\" : \"0\") + \"&\";\n    }\n\n    return hash;\n}\n\nclass WelcomePage extends React.Component {\n    render() {\n        return (\n            <div id=\"welcomePage\" className=\"main\">\n                <h1>Mafia Storyteller Helper</h1>\n                <h2>Created by Aykelith@NiAl</h2>\n                <button \n                    id=\"startBtn\"\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.GAME_SETUP;\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Start\n                </button>\n                <button\n                    id=\"generatorBtn\"\n                    onClick={() => {\n\n                    }}\n                >\n                    Generator\n                </button>\n            </div>\n        );\n    }\n};\n\nclass GameSetupPage extends React.Component {\n    render() {\n        return (\n            <div id=\"gameSetupPage\" className=\"main\">\n                <h2>Game Setup</h2>\n                <div className=\"block\">\n                    <div>Ordinea noptilor:</div>\n                    <div id=\"nightsOrderCnt\">\n                        {\n                            this.props.parent.state.nightOrder.map(round => {\n                                return (\n                                    <div key={`round${round}`}>\n                                        <span>{NIGHT_ROUND._toText(round)}</span>\n                                        <div>\n                                            \n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <button\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.PLAYERS_SETUP;\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Urmatorul\n                </button>\n            </div>\n        )\n    }\n}\n\nclass PlayersSetupPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.props.parent.state.players = [\n            { name: \"Mafia 1\", role: \"Mafia\", alive: true },\n            { name: \"Mafia 2\", role: \"Mafia\", alive: true },\n            { name: \"Godfather\", role: \"Godfather\", alive: true },\n            { name: \"Policeman\", role: \"Policeman\", alive: true },\n            { name: \"Policeman 2\", role: \"Policeman\", alive: true },\n            { name: \"Veteran\", role: \"Veteran\", alive: true },\n            { name: \"Vigilante\", role: \"Vigilante\", alive: true },\n            { name: \"Doctor\", role: \"Doctor\", alive: true },\n            { name: \"Mayor\", role: \"Mayor\", alive: true },\n            { name: \"Clown\", role: \"Clown\", alive: true },\n            { name: \"Serialkiller\", role: \"Serialkiller\", alive: true }\n        ]\n    }\n    \n    render() {\n        return (\n            <div id=\"playersSetupPage\" className=\"main\">\n                <h2>Players setup</h2>\n                <div>\n                    <span>Numarul de jucatori: </span>\n                    <input\n                        type=\"number\"\n                        value={this.props.parent.state.players.length}\n                        onChange={e => {\n                            this.props.parent.state.players.length = parseInt(e.target.value);\n\n                            for (let i=0, length = this.props.parent.state.players.length; i < length; ++i) {\n                                if (!this.props.parent.state.players[i]) {\n                                    this.props.parent.state.players[i] = Object.assign({}, DEFAULT_PLAYER);\n                                }\n                            }\n\n                            this.props.parent.setState(this.props.parent.state);\n                        }}\n                    />\n                </div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Nr</th>\n                            <th>Nume</th>\n                            <th>Rol</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.props.parent.state.players.map((player, index) => {\n                                return (\n                                    <tr key={`player${index}`}>\n                                        <td>{index}</td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={player.name}\n                                                onChange={e => {\n                                                    this.props.parent.state.players[index].name = e.target.value;\n                                                    this.props.parent.setState(this.props.parent.state);\n                                                }}\n                                            />\n                                        </td>\n                                        <td>\n                                            <select\n                                                value={player.role}\n                                                onChange={e => {\n                                                    this.props.parent.state.players[index].role = e.target.value;\n                                                    this.props.parent.setState(this.props.parent.state);\n                                                }}\n                                            >\n                                                <option value={-1}>Niciun rol</option>\n                                                {\n                                                    Object.keys(PLAYER_ROLES).map(role => {\n                                                        return <option key={role} value={role}>{PLAYER_ROLES[role].text}</option>;\n                                                    })\n                                                }\n                                            </select>\n                                        </td>\n                                        <td></td>\n                                    </tr>\n                                );\n                            })\n                        }\n                    </tbody>\n                </table>\n                <button\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.NIGHT;\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Incepe jocul\n                </button>\n            </div>\n        )\n    }\n}\n\nclass NightPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.calculateNight = this.calculateNight.bind(this);\n\n        this.renderPlayer = this.renderPlayer.bind(this);\n\n        this.renderDay = this.renderDay.bind(this);\n        this.renderNight = this.renderNight.bind(this);\n\n        this.renderSelectable = this.renderSelectable.bind(this);\n        this.renderVeteran = this.renderVeteran.bind(this);\n\n        this.wasProtectedByDoctor = this.wasProtectedByDoctor.bind(this);\n        this.wasSelfDefence = this.wasSelfDefence.bind(this);\n        this.isGuilty = this.isGuilty.bind(this);\n        this.getRoleIndex = this.getRoleIndex.bind(this);\n        this.getRoleAlive = this.getRoleAlive.bind(this);\n        \n        this.getResultMessage = this.getResultMessage.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.parent.createHash();\n    }\n\n    wasProtectedByDoctor(index) { return this.props.parent.state.night.doctorSelected == index; }\n    wasSelfDefence(index) { return this.props.parent.state.night.veteranSelected == index };\n    isGuilty(index) { return ['Mafia', 'Serialkiller'].includes(this.props.parent.state.players[index].role); }\n    getRoleIndex(role) { \n        for (let i=0, length=this.props.parent.state.players.length; i < length; ++i) {\n            if (this.props.parent.state.players[i].role == role) return i;\n        } \n\n        return null;\n    }\n    getRoleAlive(role) {\n        return this.props.parent.state.players\n            .filter(player => NIGHT_ROUND._roleIsForThisRound(role, player.role) && player.alive);\n    }\n\n    calculateNight() {\n        let night = this.props.parent.state.night;\n        night.otherDeaths = [];\n\n        let veteranUsedTheBullet = false;\n\n        if (night.mafiaSelected) {\n            console.log(\"MAFIA\", night.mafiaSelected, this.props.parent.state.players[night.mafiaSelected]);\n            if (this.wasSelfDefence(night.mafiaSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    --this.props.parent.state.players[night.mafiaSelected].bullets;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Godfather');\n                this.props.parent.state.players[id].alive = false;\n                night.mafiaSelected = { id: id, action: ROUND_ACTION.SELF_DEFENCE };\n            } else if (this.wasProtectedByDoctor(night.mafiaSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                night.mafiaSelected = { id: night.mafiaSelected, action: ROUND_ACTION.SAVED_BY_DOCTOR };\n            } else {\n                this.props.parent.state.players[night.mafiaSelected].alive = false;\n                night.mafiaSelected = { id: night.mafiaSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n            }\n        }\n        \n        if (night.serialkillerSelected) {\n            console.log(\"SERIALKILLER\", night.serialkillerSelected, this.props.parent.state.players[night.serialkillerSelected]);\n            if (this.wasSelfDefence(night.serialkillerSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    --this.props.parent.state.players[night.serialkillerSelected].bullets;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Serialkiller');\n                this.props.parent.state.players[id].alive = false;\n                night.serialkillerSelected = { id: id, action: ROUND_ACTION.SELF_DEFENCE };\n            } else if (this.wasProtectedByDoctor(night.serialkillerSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                night.serialkillerSelected = { id: night.serialkillerSelected, action: ROUND_ACTION.SAVED_BY_DOCTOR };\n            } else {\n                this.props.parent.state.players[night.serialkillerSelected].alive = false;\n                night.serialkillerSelected = { id: night.serialkillerSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n            }\n        }\n        \n        if (night.vigilanteSelected) {\n            console.log(\"VIGILANTE\", night.vigilanteSelected, this.props.parent.state.players[night.vigilanteSelected]);\n            if (this.wasSelfDefence(night.vigilanteSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    --this.props.parent.state.players[night.vigilanteSelected].bullets;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Vigilante');\n                this.props.parent.state.players[id].alive = false;\n                night.vigilanteSelected = { id: id, action: ROUND_ACTION.SELF_DEFENCE };\n            } else if (this.wasProtectedByDoctor(night.vigilanteSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                night.vigilanteSelected = { id: night.vigilanteSelected, action: ROUND_ACTION.SAVED_BY_DOCTOR };\n            } else {\n                this.props.parent.state.players[night.vigilanteSelected].alive = false;\n                night.vigilanteSelected = { id: night.vigilanteSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n            }\n        }\n\n        if (night.policeSelected) {\n            console.log(\"POLICE\", night.policeSelected, this.props.parent.state.players[night.policeSelected]);\n            if (this.wasSelfDefence(night.policeSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet, night.policeVeteranSelected, this.props.parent.state.players[night.policeVeteranSelected]);\n                if (!veteranUsedTheBullet) {\n                    --this.props.parent.state.players[night.policeSelected].bullets;\n                    veteranUsedTheBullet = true;\n                }\n\n                this.props.parent.state.players[night.policeVeteranSelected].alive = false;\n                night.otherDeaths.push({ id: night.policeVeteranSelected, action: ROUND_ACTION.SELF_DEFENCE });\n            }\n\n            night.policeSelected = { id: night.policeSelected, action: this.isGuilty(night.policeSelected) ? ROUND_ACTION.GUILTY : ROUND_ACTION.INNOCENT };\n        }\n        \n        if (night.doctorSelected) {\n            console.log(\"DOCTOR\", night.doctorSelected, this.props.parent.state.players[night.doctorSelected]);\n            if (this.wasSelfDefence(night.doctorSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet, night.doctorVeteranSelected, this.props.parent.state.players[night.doctorVeteranSelected]);\n                if (!veteranUsedTheBullet) {\n                    --this.props.parent.state.players[night.doctorSelected].bullets;\n                    veteranUsedTheBullet = true;\n                }\n\n                this.props.parent.state.players[night.doctorVeteranSelected].alive = false;\n                night.otherDeaths.push({ id: night.doctorVeteranSelected, action: ROUND_ACTION.SELF_DEFENCE });\n            }\n\n            night.doctorSelected = { id: night.doctorSelected, action: this.isGuilty(night.doctorSelected) ? ROUND_ACTION.GUILTY : ROUND_ACTION.INNOCENT };\n        }\n    }\n\n    renderPlayer(player, settings) {\n        return (\n            <div onClick={settings.onClick} className={`${player.role} ${settings.className || \"\"}`}>\n                <div>{player.name}</div>\n                <div>{settings.role ? settings.role(player) : PLAYER_ROLES[player.role].text}</div>\n            </div>\n        )\n    }\n\n    getResultMessage(round, result) {\n        if (round == NIGHT_ROUND.Mafia) {\n            if (result.action == ROUND_ACTION.KILLED_IN_NIGHT) {\n                return <span>Mafiotii au omorat pe <b>{this.props.parent.state.players[this.props.parent.state.night.mafiaSelected.id].name}</b></span>;\n            } else if (result.action == ROUND_ACTION.SELF_DEFENCE) {\n                return <span>Mafiotii fraierii</span>;\n            }\n        }\n    }\n\n    renderDay() {\n        console.log(\"RRR\", this.props.parent.state.night);\n\n        return (\n            <div id=\"nightPage_day\" className=\"main\">\n                <h2 id=\"dayNumber\">Ziua {this.props.parent.state.dayNumber}</h2>\n                {\n                    this.props.parent.state.night\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Noaptea trecuta</h3>\n                        {\n                            this.props.parent.state.night.mafiaSelected\n                            &&\n                            <div className=\"Mafia\">{this.getResultMessage(NIGHT_ROUND.Mafia, this.props.parent.state.night.mafiaSelected)}</div>\n                        }\n                        {\n                            this.props.parent.state.night.serialkillerSelected\n                            &&\n                            <div className=\"Serialkiller\">Serialkiller-ii au selectat pe {this.props.parent.state.night.serialkillerSelected.id} si {this.props.parent.state.night.serialkillerSelected.action}</div>\n                        }\n                    </div>\n                }\n                <div className=\"playersStatusCnt\">\n                    <h3>Lista jucatori</h3>\n                    <h4>(selecteaza un jucator pentru a-l linsa)</h4>\n                    {\n                        this.props.parent.state.players\n                            .map((player, index) => {\n                            return this.renderPlayer(\n                                player, \n                                {\n                                    className: `${this.state.selectedPlayer == index ? \"selected\" : \"\"} ${!player.alive ? \"deleted\" : \"\"}`, \n                                    onClick: () => {\n                                        console.log(player.alive);\n                                        if (!player.alive) return;\n\n                                        this.state.selectedPlayer = this.state.selectedPlayer == index ? null : index;\n                                        this.setState(this.state);\n                                    }\n                                }\n                            );\n                        })\n                    }\n                </div>\n                <button\n                    id=\"startNightBtn\"\n                    onClick={e => {\n                        this.state.selectedPlayer = null;\n                        this.state.auxSelected = null;\n                        this.state.auxActivated = false;\n                        this.state.veteranButton = null;\n\n                        this.props.parent.state.isNight = true;\n                        ++this.props.parent.state.dayNumber;\n                        this.props.parent.state.nightCurrentState = this.props.parent.state.nightOrder[0];\n                        this.props.parent.state.nightCurrentOrderIndex = 0;\n                        this.props.parent.state.night = {};\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Incepe noaptea\n                </button>\n            </div>\n        )\n    }\n\n    renderSelectable(settings) {\n        console.log(settings);\n        return (\n            <div id=\"mafiaStep\" className=\"nightStep\">\n                <div className=\"playersStatusCnt\">\n                    <h3>{settings.title}</h3>\n                    <h4>{settings.subtitle}</h4>\n                    {\n                        this.props.parent.state.players\n                            .filter(player => !NIGHT_ROUND._roleIsForThisRound(this.props.parent.state.nightCurrentState, player.role) && player.alive)\n                            .sort(settings.filter ? settings.filter : (player1, player2) => player1.role > player2.role)\n                            .map((player, index) => {\n                            return this.renderPlayer(\n                                player, \n                                Object.assign(\n                                    {\n                                        className: settings.className ? \n                                            `${this.state.selectedPlayer == index ? \"selected\" : \"\"} ${settings.className(player, index)}` : \n                                            this.state.selectedPlayer == index && \"selected\", \n                                        onClick: () => {\n                                            this.state.selectedPlayer = this.state.selectedPlayer == index ? null : index;\n                                            this.setState(this.state);\n                                        },\n                                    }, \n                                    settings.player || {}\n                                )\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    renderVeteran() {\n        return (\n            <div id=\"veteranStep\" className=\"nightStep\">\n                <h3>Vrei sa folosesti glontul?</h3>\n                <div id=\"buttonsCnt\">\n                    <button \n                        className={this.state.veteranButton == 1 && 'selected'}\n                        onClick={() => {\n                            this.props.parent.state.night.veteranSelected = this.getRoleIndex('Veteran');\n                            this.state.veteranButton = 1;\n                            this.setState(this.state);\n                        }}\n                    >\n                        Da\n                    </button>\n                    <button \n                        className={this.state.veteranButton == 2 && 'selected'}\n                        onClick={() => {\n                            this.props.parent.state.night.veteranSelected = null;\n                            this.state.veteranButton = 2;\n                            this.setState(this.state);\n                        }}\n                    >\n                        Nu\n                    </button>\n                </div>\n                {\n                    this.props.parent.state.night.veteranSelected\n                    &&\n                    this.props.parent.state.night.policeSelected == this.props.parent.state.night.veteranSelected\n                    && \n                    this.getRoleAlive(NIGHT_ROUND.Police).length > 1\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Lista politisti</h3>\n                        <h4>(selecteaza un politist pentru a-l omori)</h4>\n                        {\n                            this.getRoleAlive(NIGHT_ROUND.Police).map((player, index) => {\n                                return this.renderPlayer(player, \n                                    {\n                                        className: this.props.parent.state.night.policeVeteranSelected == index && \"selected\", \n                                        onClick: () => {\n                                            this.props.parent.state.night.policeVeteranSelected = this.props.parent.state.night.policeVeteranSelected == index ? null : index;\n                                            this.props.parent.setState(this.props.parent.state);\n                                        }\n                                    }\n                                );\n                            })\n                        }\n                    </div>\n                }\n                {\n                    this.props.parent.state.night.veteranSelected\n                    &&\n                    this.props.parent.state.night.doctorSelected == this.props.parent.state.night.veteranSelected\n                    && \n                    this.getRoleAlive(NIGHT_ROUND.Doctor).length > 1\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Lista doctori</h3>\n                        <h4>(selecteaza un doctor pentru a-l omori)</h4>\n                        {\n                            this.getRoleAlive(NIGHT_ROUND.Doctor).map((player, index) => {\n                                return this.renderPlayer(player, this.props.parent.state.night.doctorVeteranSelected == index && \"selected\", () => {\n                                    this.props.parent.state.night.doctorVeteranSelected = this.props.parent.state.night.doctorVeteranSelected == index ? null : index;\n                                    this.props.parent.setState(this.props.parent.state);\n                                });\n                            })\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    renderNight() {\n        let currentRoundPlayers = this.props.parent.state.players\n            .filter(player => NIGHT_ROUND._roleIsForThisRound(this.props.parent.state.nightCurrentState, player.role) && player.alive)\n            .sort((player1, player2) => player1.role > player2.role);\n            \n        return (\n            <div id=\"nightPage_night\" className=\"main\">\n                <h1>{NIGHT_ROUND._toRoundText(this.props.parent.state.nightCurrentState)}</h1>\n                <div className=\"playersStatusCnt\">\n                    <h3>Lista jucatori</h3>\n                    {\n                        currentRoundPlayers.map((player, index) => {\n                            return this.renderPlayer(player, \n                                {\n                                    className: this.state.auxActivated && this.state.auxSelected == index && \"selected\", \n                                    onClick: () => {\n                                        this.state.auxSelected = this.state.auxSelected == index ? null : index;\n                                        this.setState(this.state);\n                                    }\n                                }\n                            );\n                        })\n                    }\n                </div>\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Mafia\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima)\", required: true })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Serialkiller\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima)\" })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Police\n                    &&\n                    this.renderSelectable({ \n                        title: \"Posibili criminali\", \n                        subtitle: \"(selecteaza un jucator)\",\n                        filter: (player1, player2) => roleIsInnocent(player1.role) > roleIsInnocent(player2.role),\n                        className: (player, index) => roleIsInnocent(player.role) ? \"innocent\" : \"guilty\",\n                        player: {\n                            role: (player) => roleIsInnocent(player.role) ? \"Inocent\" : \"Vinovant\"\n                        }\n                    })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Vigilante\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima sau nu)\" })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima sau nu)\" })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Veteran\n                    &&\n                    this.renderVeteran()\n                }\n                <div id=\"buttonsCnt\">\n                    <button\n                        id=\"backState\"\n                        onClick={() => {\n\n                        }}\n                    >\n                        Inapoi\n                    </button>\n                    <button \n                        id=\"nextState\"\n                        onClick={() => {\n                            if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Mafia) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.mafiaSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Serialkiller) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.serialkillerSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Police) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.policeSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Vigilante) {\n                                this.props.parent.state.night.vigilanteSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Veteran) {\n                                if (this.props.parent.state.night.veteranSelected === undefined) {\n                                    return alert(\"Selecteaza DA sau NU\");\n                                }\n\n                                if (this.props.parent.state.night.veteranSelected) {\n                                    if (this.props.parent.state.night.policeSelected == this.props.parent.state.night.veteranSelected && this.getRoleAlive(NIGHT_ROUND.Police).length > 1 && !this.props.parent.state.night.policeVeteranSelected) {\n                                        return alert(\"Selecteaza un politis\");\n                                    }\n\n                                    if (this.props.parent.state.night.doctorSelected == this.props.parent.state.night.veteranSelected && this.getRoleAlive(NIGHT_ROUND.Doctor).length > 1 && !this.props.parent.state.night.doctorVeteranSelected) {\n                                        return alert(\"Selecteaza un doctor\");\n                                    }\n                                }\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.doctorSelected = this.state.selectedPlayer;\n                            }\n\n                            this.state.selectedPlayer = null;\n                            this.state.auxSelected = null;\n                            this.state.auxActivated = false;\n\n                            ++this.props.parent.state.nightCurrentOrderIndex;\n\n                            if (this.props.parent.state.nightCurrentOrderIndex >= this.props.parent.state.nightOrder.length) {\n                                this.calculateNight();\n                                this.props.parent.state.isNight = false;\n                            } else {\n                                this.props.parent.state.nightCurrentState = this.props.parent.state.nightOrder[this.props.parent.state.nightCurrentOrderIndex];\n                            }\n                            \n                            this.props.parent.setState(this.props.parent.state);\n                        }}\n                    >\n                        Urmatorul\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return this.props.parent.state.isNight ? this.renderNight() : this.renderDay();\n    }\n}\n\nclass GeneratorPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        <div id=\"generatorPage\" className=\"main\">\n            <h2>Generator</h2>\n            <div id=\"presetCnt\">\n                <div id=\"presetSelectCnt\">\n                    <span>Preset:</span>\n                </div>\n            </div>\n        </div>\n    }\n};\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gameStep: GAME_STEP.WELCOME,\n            gameSettings: Object.assign({}, DEFAULT_GAME_SETTINGS),\n\n            players: [],\n            nightOrder: DEFAULT_ROUNDS_ORDER.slice(),\n\n            dayNumber: 1,\n            isNight: false,\n\n            nightCurrentState: null,\n            nightCurrentOrderIndex: 0,\n            night: null,\n            nights: []\n        };\n\n        this.createHash = this.createHash.bind(this);\n    }\n\n    componentDidMount() {\n        let decodedURI = decodeURIComponent(window.location.hash);\n        let token1 = decodedURI.indexOf(\"&&\");\n\n        if (token1 == -1) return; \n        \n        let playersString = decodedURI.substring(1, token1);\n        console.log(\"playersString\", playersString);\n\n        let players = playersString.split(\"&\");\n        for (let i=0, length=players.length; i < length; ++i) {\n            let chars = players[i].split(\"|\");\n\n            console.log(players[i], chars);\n\n            this.state.players.push({\n                name: chars[0],\n                role: Object.keys(PLAYER_ROLES).filter(role => PLAYER_ROLES[role].id == chars[1])[0],\n                alive: chars[2] == \"1\" ? true : false\n            });\n        }\n\n        console.log(this.state.players);\n\n        let token2 = decodedURI.indexOf(\"&&\", token1 + 1);\n        this.state.day = parseInt(decodedURI.substring(token1 + 2, token2));\n\n        this.state.gameStep = GAME_STEP.NIGHT;\n        this.setState(this.state);\n    }\n\n    createHash() {\n        window.location.hash = createHashFromPlayers(this.state.players) + \"&\" + this.state.dayNumber + \"&&\";\n    }\n\n    render() {\n        let displayBlock = null;\n        if (this.state.gameStep == GAME_STEP.WELCOME) displayBlock = <WelcomePage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.GAME_SETUP) displayBlock = <GameSetupPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.PLAYERS_SETUP) displayBlock = <PlayersSetupPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.NIGHT) displayBlock = <NightPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.GENERATOR) displayBlock = <GeneratorPage parent={this}/>\n\n        return displayBlock;\n    }\n};\n\nReactDOM.render(\n    <MainPage/>,\n    document.getElementById('root')\n);"]}