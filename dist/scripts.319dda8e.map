{"version":3,"sources":["scripts/index.js"],"names":["GAME_STEP","WELCOME","GAME_SETUP","PLAYERS_SETUP","NIGHT","GENERATOR","PLAYER_ROLES","Mafia","text","id","Godfather","Serialkiller","Veteran","Vigilante","Policeman","Doctor","Mayor","Clown","roleIsInnocent","role","NIGHT_ROUND","Police","Town","_toText","round","_toText2","_toRoundText","_roleIsForThisRound","ROUND_ACTION","SAVED_BY_DOCTOR","KILLED_IN_NIGHT","LYNCHED","SELF_DEFENCE","GUILTY","INNOCENT","DEFAULT_ROUNDS_ORDER","DEFAULT_PLAYER","name","alive","DEFAULT_GAME_SETTINGS","createHashFromPlayers","players","hash","i","length","WelcomePage","props","parent","state","gameStep","setState","React","Component","GameSetupPage","nightOrder","map","PlayersSetupPage","window","debugMode","timesUsedBullet","timesSavedHimself","parseInt","e","target","value","Object","assign","player","index","keys","console","log","NightPage","calculateNight","bind","renderPlayer","renderDay","renderNight","renderSelectable","renderVeteran","wasProtectedByDoctor","wasSelfDefence","isGuilty","getRoleIndex","getNameIndex","getRoleAlive","countSpecial","resetBetweenRounds","prepareForNextNight","getResultMessage","createHash","night","doctorSelected","veteranSelected","includes","filter","special","count","selectedPlayer","auxSelected","auxUnique","auxActivated","nightCurrentState","nightCurrentOrderIndex","veteranUsedTheBullet","townSelected","action","mafiaSelected","serialkillerSelected","vigilanteSelected","policeSelected","police","policeVeteranSelected","doctorVeteranSelected","settings","onClick","className","result","message","roundName","_result","__html","person","dayNumber","index2","veteranButton","isNight","scrollTo","title","subtitle","sort","player1","player2","playersLength","currentRoundPlayers","required","lastNight","alert","undefined","GeneratorPage","MainPage","gameSettings","slice","packCompresser","JsonUrl","location","decompress","then","json","compress","output","displayBlock","ReactDOM","render","document","getElementById"],"mappings":"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","file":"scripts.319dda8e.map","sourceRoot":"..","sourcesContent":["const GAME_STEP = {\n    WELCOME: 0,\n    GAME_SETUP: 2,\n    PLAYERS_SETUP: 3,\n    NIGHT: 4,\n\n    GENERATOR: 99\n}\n\nconst PLAYER_ROLES = {\n    Mafia: {\n        text: \"Mafiot\",\n        id: 0\n    },\n    Godfather: {\n        text: \"Godfather\",\n        id: 1\n    },\n    Serialkiller: {\n        text: \"Serial killer\",\n        id: 2\n    },\n    Veteran: {\n        text: \"Veteran\",\n        id: 3\n    },\n    Vigilante: {\n        text: \"Vigilentul\",\n        id: 4\n    },\n    Policeman: {\n        text: \"Politist\",\n        id: 5\n    },\n    Doctor: {\n        text: \"Medic\",\n        id: 6\n    },\n    Mayor: {\n        text: \"Primar\",\n        id: 7\n    },\n    Clown: {\n        text: \"Mascarici\",\n        id: 8\n    }\n};\n\nfunction roleIsInnocent(role) {\n    return !(role == \"Mafia\" || role == \"Serialkiller\");\n}\n\nconst NIGHT_ROUND = {\n    Mafia: 0,\n    Serialkiller: 1,\n    Vigilante: 2,\n    Veteran: 3,\n    Police: 4,\n    Doctor: 5,\n    Clown: 6,\n    Town: 7,\n\n    _toText: (round) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return \"Mafia\";\n            case NIGHT_ROUND.Serialkiller: return \"Serialkillerului\";\n            case NIGHT_ROUND.Vigilante: return \"Vigilentului\";\n            case NIGHT_ROUND.Veteran: return \"Veteranului\";\n            case NIGHT_ROUND.Police: return \"Politistii\";\n            case NIGHT_ROUND.Doctor: return \"Doctorii\";\n            case NIGHT_ROUND.Clown: return \"Mascariciului\";\n            case NIGHT_ROUND.Town: return \"Orasul\";\n        }\n\n        return \"Error\";\n    },\n\n    _toText2: (round) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return \"Mafia\";\n            case NIGHT_ROUND.Serialkiller: return \"Serialkillerul\";\n            case NIGHT_ROUND.Vigilante: return \"Vigilentul\";\n            case NIGHT_ROUND.Veteran: return \"Veteranul\";\n            case NIGHT_ROUND.Police: return \"Politistii\";\n            case NIGHT_ROUND.Doctor: return \"Doctorii\";\n            case NIGHT_ROUND.Clown: return \"Mascariciul\";\n            case NIGHT_ROUND.Town: return \"Orasul\";\n        }\n\n        return \"Error\";\n    },\n\n    _toRoundText: (round) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return \"Runda mafiotilor\";\n            case NIGHT_ROUND.Serialkiller: return \"Runda serialkillerului\";\n            case NIGHT_ROUND.Vigilante: return \"Runda vigilentului\";\n            case NIGHT_ROUND.Veteran: return \"Runda veteranului\";\n            case NIGHT_ROUND.Police: return \"Runda politistilor\";\n            case NIGHT_ROUND.Doctor: return \"Runda doctorilor\";\n            case NIGHT_ROUND.Clown: return \"Runda mascariciului\";\n        }\n\n        return \"Error\";\n    },\n\n    _roleIsForThisRound: (round, role) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return role == \"Mafia\" || role == \"Godfather\";\n            case NIGHT_ROUND.Serialkiller: return role == \"Serialkiller\";\n            case NIGHT_ROUND.Vigilante: return role == \"Vigilante\";\n            case NIGHT_ROUND.Veteran: return role == \"Veteran\";\n            case NIGHT_ROUND.Police: return role == \"Policeman\";\n            case NIGHT_ROUND.Doctor: return role == \"Doctor\";\n            case NIGHT_ROUND.Clown: return role == \"Clown\";\n        }\n\n        return false;\n    }\n};\n\nconst ROUND_ACTION = {\n    SAVED_BY_DOCTOR: 0,\n    KILLED_IN_NIGHT: 1,\n    LYNCHED: 2,\n    SELF_DEFENCE: 3,\n    GUILTY: 4,\n    INNOCENT: 5\n}\n\nconst DEFAULT_ROUNDS_ORDER = [ \n    NIGHT_ROUND.Mafia, \n    NIGHT_ROUND.Serialkiller, \n    NIGHT_ROUND.Police, \n    NIGHT_ROUND.Vigilante,\n    NIGHT_ROUND.Doctor,\n    NIGHT_ROUND.Veteran\n];\n\nconst DEFAULT_PLAYER = {\n    name: \"\",\n    role: -1,\n    alive: true\n};\n\nconst DEFAULT_GAME_SETTINGS = {\n\n};\n\nfunction createHashFromPlayers(players) {\n    let hash = \"\";\n    for (let i=0, length=players.length; i < length; ++i) {\n        hash += players[i].name + \"|\" + PLAYER_ROLES[players[i].role].id + \"|\" + (players[i].alive ? \"1\" : \"0\") + \"&\";\n    }\n\n    return hash;\n}\n\nclass WelcomePage extends React.Component {\n    render() {\n        return (\n            <div id=\"welcomePage\" className=\"main\">\n                <h1>Mafia Storyteller Helper</h1>\n                <h2>Created by Aykelith@NiAl</h2>\n                <button \n                    id=\"startBtn\"\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.GAME_SETUP;\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Start\n                </button>\n                <button\n                    id=\"generatorBtn\"\n                    onClick={() => {\n\n                    }}\n                >\n                    Generator\n                </button>\n            </div>\n        );\n    }\n};\n\nclass GameSetupPage extends React.Component {\n    render() {\n        return (\n            <div id=\"gameSetupPage\" className=\"main\">\n                <h2>Game Setup</h2>\n                <div className=\"block\">\n                    <div>Ordinea noptilor:</div>\n                    <div id=\"nightsOrderCnt\">\n                        {\n                            this.props.parent.state.nightOrder.map(round => {\n                                return (\n                                    <div key={`round${round}`}>\n                                        <span>{NIGHT_ROUND._toText2(round)}</span>\n                                        <div>\n                                            \n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <button\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.PLAYERS_SETUP;\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Urmatorul\n                </button>\n            </div>\n        )\n    }\n}\n\nclass PlayersSetupPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (window.debugMode) {\n            this.props.parent.state.players = [\n                { name: \"Mafia 1\", role: \"Mafia\", alive: true },\n                { name: \"Mafia 2\", role: \"Mafia\", alive: true },\n                { name: \"Godfather\", role: \"Godfather\", alive: true },\n                { name: \"Policeman\", role: \"Policeman\", alive: true },\n                { name: \"Policeman 2\", role: \"Policeman\", alive: true },\n                { name: \"Veteran\", role: \"Veteran\", alive: true, timesUsedBullet: 0 },\n                { name: \"Vigilante\", role: \"Vigilante\", alive: true },\n                { name: \"Doctor\", role: \"Doctor\", alive: true, timesSavedHimself: 0 },\n                { name: \"Mayor\", role: \"Mayor\", alive: true },\n                { name: \"Clown\", role: \"Clown\", alive: true },\n                { name: \"Serialkiller\", role: \"Serialkiller\", alive: true }\n            ]\n        }\n    }\n    \n    render() {\n        return (\n            <div id=\"playersSetupPage\" className=\"main\">\n                <h2>Players setup</h2>\n                <div>\n                    <span>Numarul de jucatori: </span>\n                    <input\n                        type=\"number\"\n                        value={this.props.parent.state.players.length}\n                        onChange={e => {\n                            this.props.parent.state.players.length = parseInt(e.target.value);\n\n                            for (let i=0, length = this.props.parent.state.players.length; i < length; ++i) {\n                                if (!this.props.parent.state.players[i]) {\n                                    this.props.parent.state.players[i] = Object.assign({}, DEFAULT_PLAYER);\n                                }\n                            }\n\n                            this.props.parent.setState(this.props.parent.state);\n                        }}\n                    />\n                </div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Nr</th>\n                            <th>Nume</th>\n                            <th>Rol</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.props.parent.state.players.map((player, index) => {\n                                return (\n                                    <tr key={`player${index}`}>\n                                        <td>{index}</td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={player.name}\n                                                onChange={e => {\n                                                    this.props.parent.state.players[index].name = e.target.value;\n                                                    this.props.parent.setState(this.props.parent.state);\n                                                }}\n                                            />\n                                        </td>\n                                        <td>\n                                            <select\n                                                value={player.role}\n                                                onChange={e => {\n                                                    this.props.parent.state.players[index].role = e.target.value;\n\n                                                    if (e.target.value == PLAYER_ROLES.Doctor) {\n                                                        this.props.parent.state.players[index].timesSavedHimself = 0;\n                                                    }\n\n                                                    if (e.target.value == PLAYER_ROLES.Veteran) {\n                                                        this.props.parent.state.players[index].timesUsedBullet = 0;\n                                                    }\n\n                                                    this.props.parent.setState(this.props.parent.state);\n                                                }}\n                                            >\n                                                <option value={-1}>Niciun rol</option>\n                                                {\n                                                    Object.keys(PLAYER_ROLES).map(role => {\n                                                        return <option key={role} value={role}>{PLAYER_ROLES[role].text}</option>;\n                                                    })\n                                                }\n                                            </select>\n                                        </td>\n                                        <td></td>\n                                    </tr>\n                                );\n                            })\n                        }\n                    </tbody>\n                </table>\n                <button\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.NIGHT;\n                        console.log(this.props.parent.state.players);\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Incepe jocul\n                </button>\n            </div>\n        )\n    }\n}\n\nclass NightPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.calculateNight = this.calculateNight.bind(this);\n\n        this.renderPlayer = this.renderPlayer.bind(this);\n\n        this.renderDay = this.renderDay.bind(this);\n        this.renderNight = this.renderNight.bind(this);\n\n        this.renderSelectable = this.renderSelectable.bind(this);\n        this.renderVeteran = this.renderVeteran.bind(this);\n\n        this.wasProtectedByDoctor = this.wasProtectedByDoctor.bind(this);\n        this.wasSelfDefence = this.wasSelfDefence.bind(this);\n        this.isGuilty = this.isGuilty.bind(this);\n        this.getRoleIndex = this.getRoleIndex.bind(this);\n        this.getNameIndex = this.getNameIndex.bind(this);\n        this.getRoleAlive = this.getRoleAlive.bind(this);\n        this.countSpecial = this.countSpecial.bind(this);\n\n        this.resetBetweenRounds = this.resetBetweenRounds.bind(this);\n        this.prepareForNextNight = this.prepareForNextNight.bind(this);\n        \n        this.getResultMessage = this.getResultMessage.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.parent.createHash();\n    }\n\n    wasProtectedByDoctor(index) { return this.props.parent.state.night.doctorSelected == index; }\n    wasSelfDefence(index) { return this.props.parent.state.night.veteranSelected == index };\n    isGuilty(index) { return ['Mafia', 'Serialkiller'].includes(this.props.parent.state.players[index].role); }\n    getRoleIndex(role) { \n        for (let i=0, length=this.props.parent.state.players.length; i < length; ++i) {\n            if (this.props.parent.state.players[i].role == role && this.props.parent.state.players[i].alive) return i;\n        } \n\n        return null;\n    }\n    getRoleAlive(role) {\n        return this.props.parent.state.players\n            .filter(player => NIGHT_ROUND._roleIsForThisRound(role, player.role) && player.alive);\n    }\n    getNameIndex(name) {\n        for (let i=0, length=this.props.parent.state.players.length; i < length; ++i) {\n            if (this.props.parent.state.players[i].name == name) return i;\n        } \n\n        return null;\n    }\n    countSpecial(special) {\n        let count = 0;\n        for (let i=0, length=this.props.parent.state.players.length; i < length; ++i) {\n            if (this.props.parent.state.players[i][special]) count += this.props.parent.state.players[i][special];\n        } \n\n        return count;\n    }\n\n    resetBetweenRounds() {\n        this.state.selectedPlayer = null;\n        this.state.auxSelected = null;\n        this.state.auxUnique = false;\n        this.state.auxActivated = false;\n    }\n\n    prepareForNextNight() {\n        this.props.parent.state.nightCurrentState = this.props.parent.state.nightOrder[this.props.parent.state.nightCurrentOrderIndex];\n\n        if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor) {\n            this.state.auxActivated = true;\n            this.state.auxUnique = true;\n        }\n    }\n\n    calculateNight() {\n        let night = this.props.parent.state.night;\n\n        let veteranUsedTheBullet = false;\n\n        if (night.townSelected != null) {\n            console.log(\"TOWN\", night.townSelected, this.props.parent.state.players[night.townSelected]);\n            night.townSelected = { id: night.townSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n        }\n\n        if (night.mafiaSelected != null) {\n            console.log(\"MAFIA\", night.mafiaSelected, this.props.parent.state.players[night.mafiaSelected]);\n            if (this.wasSelfDefence(night.mafiaSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.mafiaSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Godfather');\n                this.props.parent.state.players[id].alive = false;\n                night.mafiaSelected = { id: night.mafiaSelected, action: ROUND_ACTION.SELF_DEFENCE };\n            } else if (this.wasProtectedByDoctor(night.mafiaSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                night.mafiaSelected = { id: night.mafiaSelected, action: ROUND_ACTION.SAVED_BY_DOCTOR };\n            } else {\n                this.props.parent.state.players[night.mafiaSelected].alive = false;\n                night.mafiaSelected = { id: night.mafiaSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n            }\n        }\n        \n        if (night.serialkillerSelected != null) {\n            console.log(\"SERIALKILLER\", night.serialkillerSelected, this.props.parent.state.players[night.serialkillerSelected]);\n            if (this.wasSelfDefence(night.serialkillerSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.serialkillerSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Serialkiller');\n                this.props.parent.state.players[id].alive = false;\n                night.serialkillerSelected = { id: night.serialkillerSelected, action: ROUND_ACTION.SELF_DEFENCE };\n            } else if (this.wasProtectedByDoctor(night.serialkillerSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                night.serialkillerSelected = { id: night.serialkillerSelected, action: ROUND_ACTION.SAVED_BY_DOCTOR };\n            } else {\n                this.props.parent.state.players[night.serialkillerSelected].alive = false;\n                night.serialkillerSelected = { id: night.serialkillerSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n            }\n        }\n        \n        if (night.vigilanteSelected != null) {\n            console.log(\"VIGILANTE\", night.vigilanteSelected, this.props.parent.state.players[night.vigilanteSelected]);\n            if (this.wasSelfDefence(night.vigilanteSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.vigilanteSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Vigilante');\n                this.props.parent.state.players[id].alive = false;\n                night.vigilanteSelected = { id: night.vigilanteSelected, action: ROUND_ACTION.SELF_DEFENCE };\n            } else if (this.wasProtectedByDoctor(night.vigilanteSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                night.vigilanteSelected = { id: night.vigilanteSelected, action: ROUND_ACTION.SAVED_BY_DOCTOR };\n            } else {\n                this.props.parent.state.players[night.vigilanteSelected].alive = false;\n                night.vigilanteSelected = { id: night.vigilanteSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n            }\n        }\n\n        if (night.policeSelected != null) {\n            console.log(\"POLICE\", night.policeSelected, this.props.parent.state.players[night.policeSelected]);\n\n            night.policeSelected = { id: night.policeSelected, police: this.isGuilty(night.policeSelected) ? ROUND_ACTION.GUILTY : ROUND_ACTION.INNOCENT };\n\n            if (this.wasSelfDefence(night.policeSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet, night.policeVeteranSelected, this.props.parent.state.players[night.policeVeteranSelected]);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.policeSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                this.props.parent.state.players[night.policeVeteranSelected].alive = false;\n                night.policeSelected.action = ROUND_ACTION.SELF_DEFENCE;\n            } else {\n                night.policeSelected.action = 999;\n            }\n        }\n        \n        if (night.doctorSelected != null) {\n            console.log(\"DOCTOR\", night.doctorSelected, this.props.parent.state.players[night.doctorSelected]);\n            if (this.wasSelfDefence(night.doctorSelected)) {\n                if (!night.doctorVeteranSelected) night.doctorVeteranSelected = this.getRoleIndex(\"Doctor\");\n\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet, night.doctorVeteranSelected, this.props.parent.state.players[night.doctorVeteranSelected]);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.doctorSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                this.props.parent.state.players[night.doctorVeteranSelected].alive = false;\n            } else if (this.props.parent.state.players[night.doctorSelected].role == \"Doctor\") {\n                ++this.props.parent.state.players[night.doctorSelected].timesSavedHimself;\n            }\n\n            night.doctorSelected = { id: night.doctorSelected };\n        }\n\n        if (night.veteranSelected != null && !veteranUsedTheBullet) {\n            ++this.props.parent.state.players[night.veteranSelected].timesUsedBullet;\n            veteranUsedTheBullet = true;\n        }\n    }\n\n    renderPlayer(player, settings) {\n        return (\n            <div onClick={settings.onClick} className={`${player.role} ${settings.className || \"\"}`}>\n                <div>{player.name} {window.debugMode && <span>({this.getNameIndex(player.name)})</span>}</div>\n                <div>{settings.role ? settings.role(player) : PLAYER_ROLES[player.role].text}</div>\n            </div>\n        )\n    }\n\n    getResultMessage(round, result, className) {\n        console.log(NIGHT_ROUND._toText(round), result);\n        if (result == null) {\n            if (round == NIGHT_ROUND.Town) {\n                return <div><span>Orasul a decis sa nu omoare pe nimeni</span></div>\n            }\n    \n            if (round == NIGHT_ROUND.Vigilante) {\n                return <div className={className}><span>Vigilentul a ales sa nu omoare</span></div>\n            }\n\n            if (round == NIGHT_ROUND.Veteran) {\n                return <div className={className}><span>Veteranul a ales sa nu-si foloseasca glontul</span></div>\n            }\n\n            return null;\n        }\n\n        if (round == NIGHT_ROUND.Veteran) {\n            let message = \"Veteranul si-a folosit glontul si-a omorat pe: \";\n\n            let count = 0;\n            for (let roundName in this.props.parent.state.night) {\n                let _result = this.props.parent.state.night[roundName];\n                if (typeof _result == 'object' && _result && _result.action == ROUND_ACTION.SELF_DEFENCE) {\n                    ++count;\n                    message += `<b>${this.props.parent.state.players[_result.id].name}(${PLAYER_ROLES[this.props.parent.state.players[_result.id].role].text})</b>,`;\n                }\n            }\n\n            return <div className={className}>{ count > 0 ? <span dangerouslySetInnerHTML={{ __html: message }}></span> : \"Veteranul si-a folosit glontul dar nu a omorat pe nimeni!\" }</div>;\n        }\n\n        if (round == NIGHT_ROUND.Doctor) {\n            let person = <b>{this.props.parent.state.players[result.id].name}({PLAYER_ROLES[this.props.parent.state.players[result.id].role].text})</b>;\n\n            for (let roundName in this.props.parent.state.night) {\n                let _result = this.props.parent.state.night[roundName];\n                if (typeof _result == 'object' && _result && _result.action == ROUND_ACTION.SAVED_BY_DOCTOR) {\n                    return <div className={className}><span>Doctorii au salvat pe cine trebuia! ({person})</span></div>;\n                }\n            }\n\n            return <div className={className}><span>Doctorii nu au salvat pe cine trebuia! ({person})</span></div>\n        }\n\n        if (round == NIGHT_ROUND.Police) {\n            return <div className={className}><span>Politistii au ales si a iesit {result.police == ROUND_ACTION.GUILTY ? \"necurat\" : \"curat\"} (<b>{this.props.parent.state.players[result.id].name}({PLAYER_ROLES[this.props.parent.state.players[result.id].role].text})</b>)</span></div>\n        }\n\n        if (result.action == ROUND_ACTION.KILLED_IN_NIGHT) {\n            return <div className={className}><span>{NIGHT_ROUND._toText2(round)} au omorat pe <b>{this.props.parent.state.players[result.id].name}({PLAYER_ROLES[this.props.parent.state.players[result.id].role].text})</b></span></div>;\n        } else if (result.action == ROUND_ACTION.SAVED_BY_DOCTOR || result.action == ROUND_ACTION.SELF_DEFENCE) {\n            return <div className={className}><span>{NIGHT_ROUND._toText2(round)} nu au reusit sa omoare pe nimeni (<b>{this.props.parent.state.players[result.id].name}({PLAYER_ROLES[this.props.parent.state.players[result.id].role].text})</b>)</span></div>;\n        }\n\n        return null;\n    }\n\n    renderDay() {\n        console.log(\"RRR\", this.props.parent.state.night);\n\n        return (\n            <div id=\"nightPage_day\" className=\"main\">\n                <h2 id=\"dayNumber\">Ziua {this.props.parent.state.dayNumber}</h2>\n                {\n                    this.props.parent.state.night\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Noaptea trecuta</h3>\n                        { this.getResultMessage(NIGHT_ROUND.Town, this.props.parent.state.night.townSelected) }\n                        { this.getResultMessage(NIGHT_ROUND.Mafia, this.props.parent.state.night.mafiaSelected, \"Mafia\") }\n                        { this.getResultMessage(NIGHT_ROUND.Serialkiller, this.props.parent.state.night.serialkillerSelected, \"Serialkiller\") }\n                        { this.getResultMessage(NIGHT_ROUND.Police, this.props.parent.state.night.policeSelected, \"Policeman\") }\n                        { this.getResultMessage(NIGHT_ROUND.Vigilante, this.props.parent.state.night.vigilanteSelected, \"Vigilante\") }\n                        { this.getResultMessage(NIGHT_ROUND.Doctor, this.props.parent.state.night.doctorSelected, \"Doctor\") }\n                        { this.getResultMessage(NIGHT_ROUND.Veteran, this.props.parent.state.night.veteranSelected, \"Veteran\") }\n                    </div>\n                }\n                <div className=\"playersStatusCnt\">\n                    <h3>Lista jucatori</h3>\n                    <h4>(selecteaza un jucator pentru a-l linsa)</h4>\n                    {\n                        this.props.parent.state.players\n                            .map((player, index) => {\n                            let index2 = this.getNameIndex(player.name);\n\n                            return this.renderPlayer(\n                                player, \n                                {\n                                    className: `${this.state.selectedPlayer == index2 ? \"selected\" : \"\"} ${!player.alive ? \"deleted\" : \"\"}`, \n                                    onClick: () => {\n                                        if (!player.alive) return;\n\n                                        this.state.selectedPlayer = this.state.selectedPlayer == index2 ? null : index2;\n                                        this.setState(this.state);\n                                    }\n                                }\n                            );\n                        })\n                    }\n                </div>\n                <button\n                    id=\"startNightBtn\"\n                    onClick={e => {\n                        this.props.parent.state.night = { townSelected: this.state.selectedPlayer }\n                        if (this.state.selectedPlayer) {\n                            this.props.parent.state.players[this.state.selectedPlayer].alive = false;\n                        }\n\n                        this.state.selectedPlayer = null;\n                        this.state.auxSelected = null;\n                        this.state.auxActivated = false;\n                        this.state.auxUnique = false;\n                        this.state.veteranButton = null;\n\n                        this.props.parent.state.isNight = true;\n                        ++this.props.parent.state.dayNumber;\n                        this.props.parent.state.nightCurrentState = this.props.parent.state.nightOrder[0];\n                        this.props.parent.state.nightCurrentOrderIndex = 0;\n\n                        if (this.getRoleIndex(\"Godfather\") == null) {\n                            this.state.auxActivated = true;\n                        }\n\n                        this.props.parent.setState(this.props.parent.state, () => { window.scrollTo(0,0); });\n\n                        console.log(\"PLAYERS\", this.props.parent.state.players);\n                    }}\n                >\n                    Incepe noaptea\n                </button>\n            </div>\n        )\n    }\n\n    renderSelectable(settings) {\n        console.log(\"SETTINGS\", settings);\n        return (\n            <div id=\"mafiaStep\" className=\"nightStep\">\n                <div className=\"playersStatusCnt\">\n                    <h3>{settings.title}</h3>\n                    <h4>{settings.subtitle}</h4>\n                    {\n                        this.props.parent.state.players\n                            .filter(player => !NIGHT_ROUND._roleIsForThisRound(this.props.parent.state.nightCurrentState, player.role) && player.alive)\n                            .sort(settings.filter ? settings.filter : (player1, player2) => player1.role > player2.role)\n                            .map((player, index) => {\n                            let index2 = this.getNameIndex(player.name);\n                            return this.renderPlayer(\n                                player, \n                                Object.assign(\n                                    {\n                                        className: settings.className ? \n                                            `${this.state.selectedPlayer == index2 ? \"selected\" : \"\"} ${settings.className(player, index2)}` : \n                                            this.state.selectedPlayer == index2 && \"selected\", \n                                        onClick: () => {\n                                            if (settings.playersLength == 0) return;\n\n                                            this.state.selectedPlayer = this.state.selectedPlayer == index2 ? null : index2;\n                                            if (this.state.auxUnique) this.state.auxSelected = null;\n                                            this.setState(this.state);\n                                        },\n                                    }, \n                                    settings.player || {}\n                                )\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    renderVeteran() {\n        return (\n            <div id=\"veteranStep\" className=\"nightStep\">\n                <h3>Vrei sa folosesti glontul?</h3>\n                <div id=\"buttonsCnt\">\n                    <button \n                        className={this.state.veteranButton == 1 && 'selected'}\n                        onClick={() => {\n                            this.props.parent.state.night.veteranSelected = this.getRoleIndex('Veteran');\n                            this.state.veteranButton = 1;\n                            this.setState(this.state);\n                        }}\n                    >\n                        Da\n                    </button>\n                    <button \n                        className={this.state.veteranButton == 2 && 'selected'}\n                        onClick={() => {\n                            this.props.parent.state.night.veteranSelected = null;\n                            this.state.veteranButton = 2;\n                            this.setState(this.state);\n                        }}\n                    >\n                        Nu\n                    </button>\n                </div>\n                {\n                    this.props.parent.state.night.veteranSelected\n                    &&\n                    this.props.parent.state.night.policeSelected == this.props.parent.state.night.veteranSelected\n                    && \n                    this.getRoleAlive(NIGHT_ROUND.Police).length > 1\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Lista politisti</h3>\n                        <h4>(selecteaza un politist pentru a-l omori)</h4>\n                        {\n                            this.getRoleAlive(NIGHT_ROUND.Police).map((player, index) => {\n                                let index2 = this.getNameIndex(player.name);\n                                return this.renderPlayer(player, \n                                    {\n                                        className: this.props.parent.state.night.policeVeteranSelected == index2 && \"selected\", \n                                        onClick: () => {\n                                            this.props.parent.state.night.policeVeteranSelected = this.props.parent.state.night.policeVeteranSelected == index2 ? null : index2;\n                                            this.props.parent.setState(this.props.parent.state);\n                                        }\n                                    }\n                                );\n                            })\n                        }\n                    </div>\n                }\n                {\n                    this.props.parent.state.night.veteranSelected\n                    &&\n                    this.props.parent.state.night.doctorSelected == this.props.parent.state.night.veteranSelected\n                    && \n                    this.getRoleAlive(NIGHT_ROUND.Doctor).length > 1\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Lista doctori</h3>\n                        <h4>(selecteaza un doctor pentru a-l omori)</h4>\n                        {\n                            this.getRoleAlive(NIGHT_ROUND.Doctor).map((player, index) => {\n                                let index2 = this.getNameIndex(player.name);\n                                return this.renderPlayer(player, this.props.parent.state.night.doctorVeteranSelected == index2 && \"selected\", () => {\n                                    this.props.parent.state.night.doctorVeteranSelected = this.props.parent.state.night.doctorVeteranSelected == index2 ? null : index2;\n                                    this.props.parent.setState(this.props.parent.state);\n                                });\n                            })\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    renderNight() {\n        let currentRoundPlayers = this.props.parent.state.players\n            .filter(player => NIGHT_ROUND._roleIsForThisRound(this.props.parent.state.nightCurrentState, player.role) && player.alive)\n            .sort((player1, player2) => player1.role > player2.role);\n            \n        return (\n            <div id=\"nightPage_night\" className=\"main\">\n                <h1>{NIGHT_ROUND._toRoundText(this.props.parent.state.nightCurrentState)}</h1>\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor\n                    &&\n                    <div className=\"specialCnt\">Medicii s-or salvat pe ei de {this.countSpecial(\"timesSavedHimself\")} ori</div>\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Veteran\n                    &&\n                    <div className=\"specialCnt\">Veteranul o folosit glontul de {this.countSpecial(\"timesUsedBullet\")} ori</div>\n                }\n                <div className=\"playersStatusCnt\">\n                    <h3>Lista jucatori</h3>\n                    {\n                        currentRoundPlayers.map((player, index) => {\n                            let index2 = this.getNameIndex(player.name);\n                            return this.renderPlayer(player, \n                                {\n                                    className: this.state.auxActivated && this.state.auxSelected == index2 && \"selected\", \n                                    onClick: () => {\n                                        this.state.auxSelected = this.state.auxSelected == index2 ? null : index2;\n                                        if (this.state.auxUnique) this.state.selectedPlayer = null;\n                                        this.setState(this.state);\n                                    }\n                                }\n                            );\n                        })\n                    }\n                </div>\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Mafia\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima)\", required: true, playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Serialkiller\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima)\", playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Police\n                    &&\n                    this.renderSelectable({ \n                        title: \"Posibili criminali\", \n                        subtitle: \"(selecteaza un jucator)\",\n                        filter: (player1, player2) => roleIsInnocent(player1.role) > roleIsInnocent(player2.role),\n                        className: (player, index) => roleIsInnocent(player.role) ? \"innocent\" : \"guilty\",\n                        player: {\n                            role: (player) => roleIsInnocent(player.role) ? \"Inocent\" : \"Vinovant\"\n                        }, \n                        playersLength: currentRoundPlayers.length \n                    })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Vigilante\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima sau nu)\", playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima sau nu)\", playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Veteran\n                    &&\n                    this.renderVeteran()\n                }\n                <div id=\"buttonsCnt\">\n                    <button\n                        id=\"backState\"\n                        onClick={() => {\n                            this.resetBetweenRounds();\n\n                            --this.props.parent.state.nightCurrentOrderIndex;\n                            if (this.props.parent.state.nightCurrentOrderIndex == -1) {\n                                this.props.parent.state.isNight = false;\n                                --this.props.parent.state.dayNumber;\n                                this.props.parent.state.night = Object.assign({}, this.props.parent.state.lastNight);\n                            } else {\n                                this.prepareForNextNight();\n                            }\n\n                            this.props.parent.setState(this.props.parent.state, () => { window.scrollTo(0,0); });\n                        }}\n                    >\n                        Inapoi\n                    </button>\n                    <button \n                        id=\"nextState\"\n                        onClick={() => {\n                            if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Mafia) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                if (currentRoundPlayers.length > 0 && this.getRoleIndex(\"Godfather\") == null) {\n                                    if (this.state.auxSelected == null) return alert(\"Selecteaza noul Godfather\");\n                                    else {\n                                        this.props.parent.state.players[this.state.auxSelected].role = \"Godfather\";\n                                    }\n                                }\n\n                                this.props.parent.state.night.mafiaSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Serialkiller) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.serialkillerSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Police) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.policeSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Vigilante) {\n                                this.props.parent.state.night.vigilanteSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Veteran) {\n                                if (this.props.parent.state.night.veteranSelected === undefined) {\n                                    return alert(\"Selecteaza DA sau NU\");\n                                }\n\n                                if (this.props.parent.state.night.veteranSelected) {\n                                    if (this.props.parent.state.night.policeSelected == this.props.parent.state.night.veteranSelected && this.getRoleAlive(NIGHT_ROUND.Police).length > 1 && !this.props.parent.state.night.policeVeteranSelected) {\n                                        return alert(\"Selecteaza un politist\");\n                                    }\n\n                                    if (this.props.parent.state.night.doctorSelected == this.props.parent.state.night.veteranSelected && this.getRoleAlive(NIGHT_ROUND.Doctor).length > 1 && !this.props.parent.state.night.doctorVeteranSelected) {\n                                        return alert(\"Selecteaza un doctor\");\n                                    }\n                                }\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null && this.state.auxSelected == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.doctorSelected = this.state.selectedPlayer || this.state.auxSelected;\n                            }\n\n                            this.resetBetweenRounds();\n\n                            ++this.props.parent.state.nightCurrentOrderIndex;\n\n                            if (this.props.parent.state.nightCurrentOrderIndex >= this.props.parent.state.nightOrder.length) {\n                                this.calculateNight();\n                                this.props.parent.state.lastNight = Object.assign({}, this.props.parent.state.night);\n                                this.props.parent.state.isNight = false;\n\n                                this.props.parent.createHash();\n                            } else {\n                                this.prepareForNextNight();\n                            }\n                            \n                            this.props.parent.setState(this.props.parent.state, () => { window.scrollTo(0,0); });\n                        }}\n                    >\n                        Urmatorul\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return this.props.parent.state.isNight ? this.renderNight() : this.renderDay();\n    }\n}\n\nclass GeneratorPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        <div id=\"generatorPage\" className=\"main\">\n            <h2>Generator</h2>\n            <div id=\"presetCnt\">\n                <div id=\"presetSelectCnt\">\n                    <span>Preset:</span>\n                </div>\n            </div>\n        </div>\n    }\n};\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gameStep: GAME_STEP.WELCOME,\n            gameSettings: Object.assign({}, DEFAULT_GAME_SETTINGS),\n\n            players: [],\n            nightOrder: DEFAULT_ROUNDS_ORDER.slice(),\n\n            dayNumber: 1,\n            isNight: false,\n\n            nightCurrentState: null,\n            nightCurrentOrderIndex: 0,\n            night: null,\n            lastNight: null\n        };\n\n        this.createHash = this.createHash.bind(this);\n    }\n\n    componentDidMount() {\n        window.packCompresser = window.JsonUrl('pack'); // JsonUrl is added to the window object\n\n        if (window.location.hash) {\n            window.packCompresser.decompress(window.location.hash)\n                .then(json => { \n                    Object.assign(this.state, json);\n\n                    this.state.lastNight = Object.assign({}, this.state.night);\n\n                    this.state.gameStep = GAME_STEP.NIGHT;\n                    this.setState(this.state);\n                });\n        }\n    }\n\n    createHash() {\n        window.packCompresser.compress(\n            { \n                players: this.state.players, \n                night: this.state.night,\n                dayNumber: this.state.dayNumber\n            }\n        ).then(output => window.location.hash = output);\n    }\n\n    render() {\n        let displayBlock = null;\n        if (this.state.gameStep == GAME_STEP.WELCOME) displayBlock = <WelcomePage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.GAME_SETUP) displayBlock = <GameSetupPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.PLAYERS_SETUP) displayBlock = <PlayersSetupPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.NIGHT) displayBlock = <NightPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.GENERATOR) displayBlock = <GeneratorPage parent={this}/>\n\n        return displayBlock;\n    }\n};\n\nReactDOM.render(\n    <MainPage/>,\n    document.getElementById('root')\n);"]}