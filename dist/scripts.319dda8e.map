{"version":3,"sources":["scripts/index.js"],"names":["GAME_STEP","WELCOME","GAME_SETUP","PLAYERS_SETUP","NIGHT","GENERATOR","PLAYER_ROLES","Mafia","text","id","Godfather","Serialkiller","Veteran","Vigilante","Policeman","Doctor","Mayor","Clown","roleIsInnocent","role","NIGHT_ROUND","Police","Town","_toText","round","_toRoundText","_roleIsForThisRound","ROUND_ACTION","SAVED_BY_DOCTOR","KILLED_IN_NIGHT","LYNCHED","SELF_DEFENCE","GUILTY","INNOCENT","DEFAULT_ROUNDS_ORDER","DEFAULT_PLAYER","name","alive","DEFAULT_GAME_SETTINGS","createHashFromPlayers","players","hash","i","length","WelcomePage","props","parent","state","gameStep","setState","React","Component","GameSetupPage","nightOrder","map","PlayersSetupPage","timesUsedBullet","timesSavedHimself","parseInt","e","target","value","Object","assign","player","index","keys","console","log","NightPage","calculateNight","bind","renderPlayer","renderDay","renderNight","renderSelectable","renderVeteran","wasProtectedByDoctor","wasSelfDefence","isGuilty","getRoleIndex","getNameIndex","getRoleAlive","countSpecial","getResultMessage","createHash","night","doctorSelected","veteranSelected","includes","filter","special","count","veteranUsedTheBullet","townSelected","action","mafiaSelected","serialkillerSelected","vigilanteSelected","policeSelected","police","policeVeteranSelected","doctorVeteranSelected","settings","onClick","className","result","message","roundName","_result","__html","person","dayNumber","index2","selectedPlayer","auxSelected","auxActivated","auxUnique","veteranButton","isNight","nightCurrentState","nightCurrentOrderIndex","window","scrollTo","title","subtitle","sort","player1","player2","playersLength","currentRoundPlayers","required","alert","undefined","GeneratorPage","MainPage","gameSettings","slice","nights","decodedURI","decodeURIComponent","location","token1","indexOf","playersString","substring","split","chars","push","token2","day","displayBlock","ReactDOM","render","document","getElementById"],"mappings":"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","file":"scripts.319dda8e.map","sourceRoot":"..","sourcesContent":["const GAME_STEP = {\n    WELCOME: 0,\n    GAME_SETUP: 2,\n    PLAYERS_SETUP: 3,\n    NIGHT: 4,\n\n    GENERATOR: 99\n}\n\nconst PLAYER_ROLES = {\n    Mafia: {\n        text: \"Mafiot\",\n        id: 0\n    },\n    Godfather: {\n        text: \"Godfather\",\n        id: 1\n    },\n    Serialkiller: {\n        text: \"Serial killer\",\n        id: 2\n    },\n    Veteran: {\n        text: \"Veteran\",\n        id: 3\n    },\n    Vigilante: {\n        text: \"Vigilentul\",\n        id: 4\n    },\n    Policeman: {\n        text: \"Politist\",\n        id: 5\n    },\n    Doctor: {\n        text: \"Medic\",\n        id: 6\n    },\n    Mayor: {\n        text: \"Primar\",\n        id: 7\n    },\n    Clown: {\n        text: \"Mascarici\",\n        id: 8\n    }\n};\n\nfunction roleIsInnocent(role) {\n    return !(role == \"Mafia\" || role == \"Serialkiller\");\n}\n\nconst NIGHT_ROUND = {\n    Mafia: 0,\n    Serialkiller: 1,\n    Vigilante: 2,\n    Veteran: 3,\n    Police: 4,\n    Doctor: 5,\n    Clown: 6,\n    Town: 7,\n\n    _toText: (round) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return \"Mafia\";\n            case NIGHT_ROUND.Serialkiller: return \"Serialkillerului\";\n            case NIGHT_ROUND.Vigilante: return \"Vigilentului\";\n            case NIGHT_ROUND.Veteran: return \"Veteranului\";\n            case NIGHT_ROUND.Police: return \"Politistii\";\n            case NIGHT_ROUND.Doctor: return \"Doctorii\";\n            case NIGHT_ROUND.Clown: return \"Mascariciului\";\n            case NIGHT_ROUND.Town: return \"Orasul\";\n        }\n\n        return \"Error\";\n    },\n\n    _toRoundText: (round) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return \"Runda mafiotilor\";\n            case NIGHT_ROUND.Serialkiller: return \"Runda serialkillerului\";\n            case NIGHT_ROUND.Vigilante: return \"Runda vigilentului\";\n            case NIGHT_ROUND.Veteran: return \"Runda veteranului\";\n            case NIGHT_ROUND.Police: return \"Runda politistilor\";\n            case NIGHT_ROUND.Doctor: return \"Runda doctorilor\";\n            case NIGHT_ROUND.Clown: return \"Runda mascariciului\";\n        }\n\n        return \"Error\";\n    },\n\n    _roleIsForThisRound: (round, role) => {\n        switch (round) {\n            case NIGHT_ROUND.Mafia: return role == \"Mafia\" || role == \"Godfather\";\n            case NIGHT_ROUND.Serialkiller: return role == \"Serialkiller\";\n            case NIGHT_ROUND.Vigilante: return role == \"Vigilante\";\n            case NIGHT_ROUND.Veteran: return role == \"Veteran\";\n            case NIGHT_ROUND.Police: return role == \"Policeman\";\n            case NIGHT_ROUND.Doctor: return role == \"Doctor\";\n            case NIGHT_ROUND.Clown: return role == \"Clown\";\n        }\n\n        return false;\n    }\n};\n\nconst ROUND_ACTION = {\n    SAVED_BY_DOCTOR: 0,\n    KILLED_IN_NIGHT: 1,\n    LYNCHED: 2,\n    SELF_DEFENCE: 3,\n    GUILTY: 4,\n    INNOCENT: 5\n}\n\nconst DEFAULT_ROUNDS_ORDER = [ \n    NIGHT_ROUND.Mafia, \n    NIGHT_ROUND.Serialkiller, \n    NIGHT_ROUND.Police, \n    NIGHT_ROUND.Vigilante,\n    NIGHT_ROUND.Doctor,\n    NIGHT_ROUND.Veteran\n];\n\nconst DEFAULT_PLAYER = {\n    name: \"\",\n    role: -1,\n    alive: true\n};\n\nconst DEFAULT_GAME_SETTINGS = {\n\n};\n\nfunction createHashFromPlayers(players) {\n    let hash = \"\";\n    for (let i=0, length=players.length; i < length; ++i) {\n        hash += players[i].name + \"|\" + PLAYER_ROLES[players[i].role].id + \"|\" + (players[i].alive ? \"1\" : \"0\") + \"&\";\n    }\n\n    return hash;\n}\n\nclass WelcomePage extends React.Component {\n    render() {\n        return (\n            <div id=\"welcomePage\" className=\"main\">\n                <h1>Mafia Storyteller Helper</h1>\n                <h2>Created by Aykelith@NiAl</h2>\n                <button \n                    id=\"startBtn\"\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.GAME_SETUP;\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Start\n                </button>\n                <button\n                    id=\"generatorBtn\"\n                    onClick={() => {\n\n                    }}\n                >\n                    Generator\n                </button>\n            </div>\n        );\n    }\n};\n\nclass GameSetupPage extends React.Component {\n    render() {\n        return (\n            <div id=\"gameSetupPage\" className=\"main\">\n                <h2>Game Setup</h2>\n                <div className=\"block\">\n                    <div>Ordinea noptilor:</div>\n                    <div id=\"nightsOrderCnt\">\n                        {\n                            this.props.parent.state.nightOrder.map(round => {\n                                return (\n                                    <div key={`round${round}`}>\n                                        <span>{NIGHT_ROUND._toText(round)}</span>\n                                        <div>\n                                            \n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <button\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.PLAYERS_SETUP;\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Urmatorul\n                </button>\n            </div>\n        )\n    }\n}\n\nclass PlayersSetupPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.props.parent.state.players = [\n            { name: \"Mafia 1\", role: \"Mafia\", alive: true },\n            { name: \"Mafia 2\", role: \"Mafia\", alive: true },\n            { name: \"Godfather\", role: \"Godfather\", alive: true },\n            { name: \"Policeman\", role: \"Policeman\", alive: true },\n            { name: \"Policeman 2\", role: \"Policeman\", alive: true },\n            { name: \"Veteran\", role: \"Veteran\", alive: true, timesUsedBullet: 0 },\n            { name: \"Vigilante\", role: \"Vigilante\", alive: true },\n            { name: \"Doctor\", role: \"Doctor\", alive: true, timesSavedHimself: 0 },\n            { name: \"Mayor\", role: \"Mayor\", alive: true },\n            { name: \"Clown\", role: \"Clown\", alive: true },\n            { name: \"Serialkiller\", role: \"Serialkiller\", alive: true }\n        ]\n    }\n    \n    render() {\n        return (\n            <div id=\"playersSetupPage\" className=\"main\">\n                <h2>Players setup</h2>\n                <div>\n                    <span>Numarul de jucatori: </span>\n                    <input\n                        type=\"number\"\n                        value={this.props.parent.state.players.length}\n                        onChange={e => {\n                            this.props.parent.state.players.length = parseInt(e.target.value);\n\n                            for (let i=0, length = this.props.parent.state.players.length; i < length; ++i) {\n                                if (!this.props.parent.state.players[i]) {\n                                    this.props.parent.state.players[i] = Object.assign({}, DEFAULT_PLAYER);\n                                }\n                            }\n\n                            this.props.parent.setState(this.props.parent.state);\n                        }}\n                    />\n                </div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Nr</th>\n                            <th>Nume</th>\n                            <th>Rol</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.props.parent.state.players.map((player, index) => {\n                                return (\n                                    <tr key={`player${index}`}>\n                                        <td>{index}</td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={player.name}\n                                                onChange={e => {\n                                                    this.props.parent.state.players[index].name = e.target.value;\n                                                    this.props.parent.setState(this.props.parent.state);\n                                                }}\n                                            />\n                                        </td>\n                                        <td>\n                                            <select\n                                                value={player.role}\n                                                onChange={e => {\n                                                    this.props.parent.state.players[index].role = e.target.value;\n\n                                                    if (e.target.value == PLAYER_ROLES.Doctor) {\n                                                        this.props.parent.state.players[index].timesSavedHimself = 0;\n                                                    }\n\n                                                    if (e.target.value == PLAYER_ROLES.Veteran) {\n                                                        this.props.parent.state.players[index].timesUsedBullet = 0;\n                                                    }\n\n                                                    this.props.parent.setState(this.props.parent.state);\n                                                }}\n                                            >\n                                                <option value={-1}>Niciun rol</option>\n                                                {\n                                                    Object.keys(PLAYER_ROLES).map(role => {\n                                                        return <option key={role} value={role}>{PLAYER_ROLES[role].text}</option>;\n                                                    })\n                                                }\n                                            </select>\n                                        </td>\n                                        <td></td>\n                                    </tr>\n                                );\n                            })\n                        }\n                    </tbody>\n                </table>\n                <button\n                    onClick={() => {\n                        this.props.parent.state.gameStep = GAME_STEP.NIGHT;\n                        console.log(this.props.parent.state.players);\n                        this.props.parent.setState(this.props.parent.state);\n                    }}\n                >\n                    Incepe jocul\n                </button>\n            </div>\n        )\n    }\n}\n\nclass NightPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.calculateNight = this.calculateNight.bind(this);\n\n        this.renderPlayer = this.renderPlayer.bind(this);\n\n        this.renderDay = this.renderDay.bind(this);\n        this.renderNight = this.renderNight.bind(this);\n\n        this.renderSelectable = this.renderSelectable.bind(this);\n        this.renderVeteran = this.renderVeteran.bind(this);\n\n        this.wasProtectedByDoctor = this.wasProtectedByDoctor.bind(this);\n        this.wasSelfDefence = this.wasSelfDefence.bind(this);\n        this.isGuilty = this.isGuilty.bind(this);\n        this.getRoleIndex = this.getRoleIndex.bind(this);\n        this.getNameIndex = this.getNameIndex.bind(this);\n        this.getRoleAlive = this.getRoleAlive.bind(this);\n        this.countSpecial = this.countSpecial.bind(this);\n        \n        this.getResultMessage = this.getResultMessage.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.parent.createHash();\n    }\n\n    wasProtectedByDoctor(index) { return this.props.parent.state.night.doctorSelected == index; }\n    wasSelfDefence(index) { return this.props.parent.state.night.veteranSelected == index };\n    isGuilty(index) { return ['Mafia', 'Serialkiller'].includes(this.props.parent.state.players[index].role); }\n    getRoleIndex(role) { \n        for (let i=0, length=this.props.parent.state.players.length; i < length; ++i) {\n            if (this.props.parent.state.players[i].role == role && this.props.parent.state.players[i].alive) return i;\n        } \n\n        return null;\n    }\n    getRoleAlive(role) {\n        return this.props.parent.state.players\n            .filter(player => NIGHT_ROUND._roleIsForThisRound(role, player.role) && player.alive);\n    }\n    getNameIndex(name) {\n        for (let i=0, length=this.props.parent.state.players.length; i < length; ++i) {\n            if (this.props.parent.state.players[i].name == name) return i;\n        } \n\n        return null;\n    }\n    countSpecial(special) {\n        let count = 0;\n        for (let i=0, length=this.props.parent.state.players.length; i < length; ++i) {\n            if (this.props.parent.state.players[i][special]) count += this.props.parent.state.players[i][special];\n        } \n\n        return count;\n    }\n\n    calculateNight() {\n        let night = this.props.parent.state.night;\n\n        let veteranUsedTheBullet = false;\n\n        if (night.townSelected != null) {\n            console.log(\"TOWN\", night.townSelected, this.props.parent.state.players[night.townSelected]);\n            night.townSelected = { id: night.townSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n        }\n\n        if (night.mafiaSelected != null) {\n            console.log(\"MAFIA\", night.mafiaSelected, this.props.parent.state.players[night.mafiaSelected]);\n            if (this.wasSelfDefence(night.mafiaSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.mafiaSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Godfather');\n                this.props.parent.state.players[id].alive = false;\n                night.mafiaSelected = { id: night.mafiaSelected, action: ROUND_ACTION.SELF_DEFENCE };\n            } else if (this.wasProtectedByDoctor(night.mafiaSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                night.mafiaSelected = { id: night.mafiaSelected, action: ROUND_ACTION.SAVED_BY_DOCTOR };\n            } else {\n                this.props.parent.state.players[night.mafiaSelected].alive = false;\n                night.mafiaSelected = { id: night.mafiaSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n            }\n        }\n        \n        if (night.serialkillerSelected != null) {\n            console.log(\"SERIALKILLER\", night.serialkillerSelected, this.props.parent.state.players[night.serialkillerSelected]);\n            if (this.wasSelfDefence(night.serialkillerSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.serialkillerSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Serialkiller');\n                this.props.parent.state.players[id].alive = false;\n                night.serialkillerSelected = { id: night.serialkillerSelected, action: ROUND_ACTION.SELF_DEFENCE };\n            } else if (this.wasProtectedByDoctor(night.serialkillerSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                night.serialkillerSelected = { id: night.serialkillerSelected, action: ROUND_ACTION.SAVED_BY_DOCTOR };\n            } else {\n                this.props.parent.state.players[night.serialkillerSelected].alive = false;\n                night.serialkillerSelected = { id: night.serialkillerSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n            }\n        }\n        \n        if (night.vigilanteSelected != null) {\n            console.log(\"VIGILANTE\", night.vigilanteSelected, this.props.parent.state.players[night.vigilanteSelected]);\n            if (this.wasSelfDefence(night.vigilanteSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.vigilanteSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                let id = this.getRoleIndex('Vigilante');\n                this.props.parent.state.players[id].alive = false;\n                night.vigilanteSelected = { id: night.vigilanteSelected, action: ROUND_ACTION.SELF_DEFENCE };\n            } else if (this.wasProtectedByDoctor(night.vigilanteSelected)) {\n                console.log(\"   \", \"WAS PROTECTED BY DOCTOR\");\n                night.vigilanteSelected = { id: night.vigilanteSelected, action: ROUND_ACTION.SAVED_BY_DOCTOR };\n            } else {\n                this.props.parent.state.players[night.vigilanteSelected].alive = false;\n                night.vigilanteSelected = { id: night.vigilanteSelected, action: ROUND_ACTION.KILLED_IN_NIGHT };\n            }\n        }\n\n        if (night.policeSelected != null) {\n            console.log(\"POLICE\", night.policeSelected, this.props.parent.state.players[night.policeSelected]);\n\n            night.policeSelected = { id: night.policeSelected, police: this.isGuilty(night.policeSelected) ? ROUND_ACTION.GUILTY : ROUND_ACTION.INNOCENT };\n\n            if (this.wasSelfDefence(night.policeSelected)) {\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet, night.policeVeteranSelected, this.props.parent.state.players[night.policeVeteranSelected]);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.policeSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                this.props.parent.state.players[night.policeVeteranSelected].alive = false;\n                night.policeSelected.action = ROUND_ACTION.SELF_DEFENCE;\n            } else {\n                night.policeSelected.action = 999;\n            }\n        }\n        \n        if (night.doctorSelected != null) {\n            console.log(\"DOCTOR\", night.doctorSelected, this.props.parent.state.players[night.doctorSelected]);\n            if (this.wasSelfDefence(night.doctorSelected)) {\n                if (!night.doctorVeteranSelected) night.doctorVeteranSelected = this.getRoleIndex(\"Doctor\");\n\n                console.log(\"   \", \"WAS SELF DEFENCE\", veteranUsedTheBullet, night.doctorVeteranSelected, this.props.parent.state.players[night.doctorVeteranSelected]);\n                if (!veteranUsedTheBullet) {\n                    ++this.props.parent.state.players[night.doctorSelected].timesUsedBullet;\n                    veteranUsedTheBullet = true;\n                }\n\n                this.props.parent.state.players[night.doctorVeteranSelected].alive = false;\n            } else if (this.props.parent.state.players[night.doctorSelected].role == \"Doctor\") {\n                ++this.props.parent.state.players[night.doctorSelected].timesSavedHimself;\n            }\n\n            night.doctorSelected = { id: night.doctorSelected };\n        }\n\n        if (night.veteranSelected != null && !veteranUsedTheBullet) {\n            ++this.props.parent.state.players[night.veteranSelected].timesUsedBullet;\n            veteranUsedTheBullet = true;\n        }\n    }\n\n    renderPlayer(player, settings) {\n        return (\n            <div onClick={settings.onClick} className={`${player.role} ${settings.className || \"\"}`}>\n                <div>{player.name} ({this.getNameIndex(player.name)})</div>\n                <div>{settings.role ? settings.role(player) : PLAYER_ROLES[player.role].text}</div>\n            </div>\n        )\n    }\n\n    getResultMessage(round, result, className) {\n        console.log(NIGHT_ROUND._toText(round), result);\n        if (result == null) {\n            if (round == NIGHT_ROUND.Town) {\n                return <div><span>Orasul a decis sa nu omoare pe nimeni</span></div>\n            }\n    \n            if (round == NIGHT_ROUND.Vigilante) {\n                return <div className={className}><span>Vigilentul a ales sa nu omoare</span></div>\n            }\n\n            if (round == NIGHT_ROUND.Veteran) {\n                return <div className={className}><span>Veteranul a ales sa nu-si foloseasca glontul</span></div>\n            }\n\n            return null;\n        }\n\n        if (round == NIGHT_ROUND.Veteran) {\n            let message = \"Veteranul si-a folosit glontul si-a omorat pe: \";\n\n            let count = 0;\n            for (let roundName in this.props.parent.state.night) {\n                let _result = this.props.parent.state.night[roundName];\n                if (typeof _result == 'object' && _result && _result.action == ROUND_ACTION.SELF_DEFENCE) {\n                    ++count;\n                    message += `<b>${this.props.parent.state.players[_result.id].name}(${this.props.parent.state.players[_result.id].role})</b>,`;\n                }\n            }\n\n            return <div className={className}>{ count > 0 ? <span dangerouslySetInnerHTML={{ __html: message }}></span> : \"Veteranul si-a folosit glontul dar nu a omorat pe nimeni!\" }</div>;\n        }\n\n        if (round == NIGHT_ROUND.Doctor) {\n            let person = <b>{this.props.parent.state.players[result.id].name}({this.props.parent.state.players[result.id].role})</b>;\n\n            for (let roundName in this.props.parent.state.night) {\n                let _result = this.props.parent.state.night[roundName];\n                if (typeof _result == 'object' && _result && _result.action == ROUND_ACTION.SAVED_BY_DOCTOR) {\n                    return <div className={className}><span>Doctorii au salvat pe cine trebuia! ({person})</span></div>;\n                }\n            }\n\n            return <div className={className}><span>Doctorii nu au salvat pe cine trebuia! ({person})</span></div>\n        }\n\n        if (round == NIGHT_ROUND.Police) {\n            return <div className={className}><span>Politistii au ales si a iesit {result.police == ROUND_ACTION.GUILTY ? \"necurat\" : \"curat\"} (<b>{this.props.parent.state.players[result.id].name}({this.props.parent.state.players[result.id].role})</b>)</span></div>\n        }\n\n        if (result.action == ROUND_ACTION.KILLED_IN_NIGHT) {\n            return <div className={className}><span>{NIGHT_ROUND._toText(round)} au omorat pe <b>{this.props.parent.state.players[result.id].name}({this.props.parent.state.players[result.id].role})</b></span></div>;\n        } else if (result.action == ROUND_ACTION.SAVED_BY_DOCTOR || result.action == ROUND_ACTION.SELF_DEFENCE) {\n            return <div className={className}><span>{NIGHT_ROUND._toText(round)} nu au reusit sa omoare pe nimeni (<b>{this.props.parent.state.players[result.id].name}({this.props.parent.state.players[result.id].role})</b>)</span></div>;\n        }\n\n        return null;\n    }\n\n    renderDay() {\n        console.log(\"RRR\", this.props.parent.state.night);\n\n        return (\n            <div id=\"nightPage_day\" className=\"main\">\n                <h2 id=\"dayNumber\">Ziua {this.props.parent.state.dayNumber}</h2>\n                {\n                    this.props.parent.state.night\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Noaptea trecuta</h3>\n                        { this.getResultMessage(NIGHT_ROUND.Town, this.props.parent.state.night.townSelected) }\n                        { this.getResultMessage(NIGHT_ROUND.Mafia, this.props.parent.state.night.mafiaSelected, \"Mafia\") }\n                        { this.getResultMessage(NIGHT_ROUND.Serialkiller, this.props.parent.state.night.serialkillerSelected, \"Serialkiller\") }\n                        { this.getResultMessage(NIGHT_ROUND.Police, this.props.parent.state.night.policeSelected, \"Policeman\") }\n                        { this.getResultMessage(NIGHT_ROUND.Vigilante, this.props.parent.state.night.vigilanteSelected, \"Vigilante\") }\n                        { this.getResultMessage(NIGHT_ROUND.Doctor, this.props.parent.state.night.doctorSelected, \"Doctor\") }\n                        { this.getResultMessage(NIGHT_ROUND.Veteran, this.props.parent.state.night.veteranSelected, \"Veteran\") }\n                    </div>\n                }\n                <div className=\"playersStatusCnt\">\n                    <h3>Lista jucatori</h3>\n                    <h4>(selecteaza un jucator pentru a-l linsa)</h4>\n                    {\n                        this.props.parent.state.players\n                            .map((player, index) => {\n                            let index2 = this.getNameIndex(player.name);\n\n                            return this.renderPlayer(\n                                player, \n                                {\n                                    className: `${this.state.selectedPlayer == index2 ? \"selected\" : \"\"} ${!player.alive ? \"deleted\" : \"\"}`, \n                                    onClick: () => {\n                                        if (!player.alive) return;\n\n                                        this.state.selectedPlayer = this.state.selectedPlayer == index2 ? null : index2;\n                                        this.setState(this.state);\n                                    }\n                                }\n                            );\n                        })\n                    }\n                </div>\n                <button\n                    id=\"startNightBtn\"\n                    onClick={e => {\n                        this.props.parent.state.night = { townSelected: this.state.selectedPlayer }\n                        if (this.state.selectedPlayer) {\n                            this.props.parent.state.players[this.state.selectedPlayer].alive = false;\n                        }\n\n                        this.state.selectedPlayer = null;\n                        this.state.auxSelected = null;\n                        this.state.auxActivated = false;\n                        this.state.auxUnique = false;\n                        this.state.veteranButton = null;\n\n                        this.props.parent.state.isNight = true;\n                        ++this.props.parent.state.dayNumber;\n                        this.props.parent.state.nightCurrentState = this.props.parent.state.nightOrder[0];\n                        this.props.parent.state.nightCurrentOrderIndex = 0;\n\n                        if (this.getRoleIndex(\"Godfather\") == null) {\n                            this.state.auxActivated = true;\n                        }\n\n                        this.props.parent.setState(this.props.parent.state, () => { window.scrollTo(0,0); });\n\n                        console.log(\"PLAYERS\", this.props.parent.state.players);\n                    }}\n                >\n                    Incepe noaptea\n                </button>\n            </div>\n        )\n    }\n\n    renderSelectable(settings) {\n        console.log(\"SETTINGS\", settings);\n        return (\n            <div id=\"mafiaStep\" className=\"nightStep\">\n                <div className=\"playersStatusCnt\">\n                    <h3>{settings.title}</h3>\n                    <h4>{settings.subtitle}</h4>\n                    {\n                        this.props.parent.state.players\n                            .filter(player => !NIGHT_ROUND._roleIsForThisRound(this.props.parent.state.nightCurrentState, player.role) && player.alive)\n                            .sort(settings.filter ? settings.filter : (player1, player2) => player1.role > player2.role)\n                            .map((player, index) => {\n                            let index2 = this.getNameIndex(player.name);\n                            return this.renderPlayer(\n                                player, \n                                Object.assign(\n                                    {\n                                        className: settings.className ? \n                                            `${this.state.selectedPlayer == index2 ? \"selected\" : \"\"} ${settings.className(player, index2)}` : \n                                            this.state.selectedPlayer == index2 && \"selected\", \n                                        onClick: () => {\n                                            if (settings.playersLength == 0) return;\n\n                                            this.state.selectedPlayer = this.state.selectedPlayer == index2 ? null : index2;\n                                            if (this.state.auxUnique) this.state.auxSelected = null;\n                                            this.setState(this.state);\n                                        },\n                                    }, \n                                    settings.player || {}\n                                )\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    renderVeteran() {\n        return (\n            <div id=\"veteranStep\" className=\"nightStep\">\n                <h3>Vrei sa folosesti glontul?</h3>\n                <div id=\"buttonsCnt\">\n                    <button \n                        className={this.state.veteranButton == 1 && 'selected'}\n                        onClick={() => {\n                            this.props.parent.state.night.veteranSelected = this.getRoleIndex('Veteran');\n                            this.state.veteranButton = 1;\n                            this.setState(this.state);\n                        }}\n                    >\n                        Da\n                    </button>\n                    <button \n                        className={this.state.veteranButton == 2 && 'selected'}\n                        onClick={() => {\n                            this.props.parent.state.night.veteranSelected = null;\n                            this.state.veteranButton = 2;\n                            this.setState(this.state);\n                        }}\n                    >\n                        Nu\n                    </button>\n                </div>\n                {\n                    this.props.parent.state.night.veteranSelected\n                    &&\n                    this.props.parent.state.night.policeSelected == this.props.parent.state.night.veteranSelected\n                    && \n                    this.getRoleAlive(NIGHT_ROUND.Police).length > 1\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Lista politisti</h3>\n                        <h4>(selecteaza un politist pentru a-l omori)</h4>\n                        {\n                            this.getRoleAlive(NIGHT_ROUND.Police).map((player, index) => {\n                                let index2 = this.getNameIndex(player.name);\n                                return this.renderPlayer(player, \n                                    {\n                                        className: this.props.parent.state.night.policeVeteranSelected == index2 && \"selected\", \n                                        onClick: () => {\n                                            this.props.parent.state.night.policeVeteranSelected = this.props.parent.state.night.policeVeteranSelected == index2 ? null : index2;\n                                            this.props.parent.setState(this.props.parent.state);\n                                        }\n                                    }\n                                );\n                            })\n                        }\n                    </div>\n                }\n                {\n                    this.props.parent.state.night.veteranSelected\n                    &&\n                    this.props.parent.state.night.doctorSelected == this.props.parent.state.night.veteranSelected\n                    && \n                    this.getRoleAlive(NIGHT_ROUND.Doctor).length > 1\n                    &&\n                    <div className=\"playersStatusCnt\">\n                        <h3>Lista doctori</h3>\n                        <h4>(selecteaza un doctor pentru a-l omori)</h4>\n                        {\n                            this.getRoleAlive(NIGHT_ROUND.Doctor).map((player, index) => {\n                                let index2 = this.getNameIndex(player.name);\n                                return this.renderPlayer(player, this.props.parent.state.night.doctorVeteranSelected == index2 && \"selected\", () => {\n                                    this.props.parent.state.night.doctorVeteranSelected = this.props.parent.state.night.doctorVeteranSelected == index2 ? null : index2;\n                                    this.props.parent.setState(this.props.parent.state);\n                                });\n                            })\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    renderNight() {\n        let currentRoundPlayers = this.props.parent.state.players\n            .filter(player => NIGHT_ROUND._roleIsForThisRound(this.props.parent.state.nightCurrentState, player.role) && player.alive)\n            .sort((player1, player2) => player1.role > player2.role);\n            \n        return (\n            <div id=\"nightPage_night\" className=\"main\">\n                <h1>{NIGHT_ROUND._toRoundText(this.props.parent.state.nightCurrentState)}</h1>\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor\n                    &&\n                    <div className=\"specialCnt\">Medicii s-or salvat pe ei de {this.countSpecial(\"timesSavedHimself\")} ori</div>\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Veteran\n                    &&\n                    <div className=\"specialCnt\">Veteranul o folosit glontul de {this.countSpecial(\"timesUsedBullet\")} ori</div>\n                }\n                <div className=\"playersStatusCnt\">\n                    <h3>Lista jucatori</h3>\n                    {\n                        currentRoundPlayers.map((player, index) => {\n                            let index2 = this.getNameIndex(player.name);\n                            return this.renderPlayer(player, \n                                {\n                                    className: this.state.auxActivated && this.state.auxSelected == index2 && \"selected\", \n                                    onClick: () => {\n                                        this.state.auxSelected = this.state.auxSelected == index2 ? null : index2;\n                                        if (this.state.auxUnique) this.state.selectedPlayer = null;\n                                        this.setState(this.state);\n                                    }\n                                }\n                            );\n                        })\n                    }\n                </div>\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Mafia\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima)\", required: true, playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Serialkiller\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima)\", playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Police\n                    &&\n                    this.renderSelectable({ \n                        title: \"Posibili criminali\", \n                        subtitle: \"(selecteaza un jucator)\",\n                        filter: (player1, player2) => roleIsInnocent(player1.role) > roleIsInnocent(player2.role),\n                        className: (player, index) => roleIsInnocent(player.role) ? \"innocent\" : \"guilty\",\n                        player: {\n                            role: (player) => roleIsInnocent(player.role) ? \"Inocent\" : \"Vinovant\"\n                        }, \n                        playersLength: currentRoundPlayers.length \n                    })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Vigilante\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima sau nu)\", playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor\n                    &&\n                    this.renderSelectable({ title: \"Posibile victime\", subtitle: \"(selecteaza o victima sau nu)\", playersLength: currentRoundPlayers.length })\n                }\n                {\n                    this.props.parent.state.nightCurrentState == NIGHT_ROUND.Veteran\n                    &&\n                    this.renderVeteran()\n                }\n                <div id=\"buttonsCnt\">\n                    <button\n                        id=\"backState\"\n                        onClick={() => {\n\n                        }}\n                    >\n                        Inapoi\n                    </button>\n                    <button \n                        id=\"nextState\"\n                        onClick={() => {\n                            if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Mafia) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                if (currentRoundPlayers.length > 0 && this.getRoleIndex(\"Godfather\") == null) {\n                                    if (this.state.auxSelected == null) return alert(\"Selecteaza noul Godfather\");\n                                    else {\n                                        this.props.parent.state.players[this.state.auxSelected].role = \"Godfather\";\n                                    }\n                                }\n\n                                this.props.parent.state.night.mafiaSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Serialkiller) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.serialkillerSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Police) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.policeSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Vigilante) {\n                                this.props.parent.state.night.vigilanteSelected = this.state.selectedPlayer;\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Veteran) {\n                                if (this.props.parent.state.night.veteranSelected === undefined) {\n                                    return alert(\"Selecteaza DA sau NU\");\n                                }\n\n                                if (this.props.parent.state.night.veteranSelected) {\n                                    if (this.props.parent.state.night.policeSelected == this.props.parent.state.night.veteranSelected && this.getRoleAlive(NIGHT_ROUND.Police).length > 1 && !this.props.parent.state.night.policeVeteranSelected) {\n                                        return alert(\"Selecteaza un politist\");\n                                    }\n\n                                    if (this.props.parent.state.night.doctorSelected == this.props.parent.state.night.veteranSelected && this.getRoleAlive(NIGHT_ROUND.Doctor).length > 1 && !this.props.parent.state.night.doctorVeteranSelected) {\n                                        return alert(\"Selecteaza un doctor\");\n                                    }\n                                }\n                            } else if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor) {\n                                if (currentRoundPlayers.length > 0 && this.state.selectedPlayer == null && this.state.auxSelected == null) {\n                                    return alert(\"Selecteaza un jucator\");\n                                }\n\n                                this.props.parent.state.night.doctorSelected = this.state.selectedPlayer || this.state.auxSelected;\n                            }\n\n                            this.state.selectedPlayer = null;\n                            this.state.auxSelected = null;\n                            this.state.auxUnique = false;\n                            this.state.auxActivated = false;\n\n                            ++this.props.parent.state.nightCurrentOrderIndex;\n\n                            if (this.props.parent.state.nightCurrentOrderIndex >= this.props.parent.state.nightOrder.length) {\n                                this.calculateNight();\n                                this.props.parent.state.isNight = false;\n                            } else {\n                                this.props.parent.state.nightCurrentState = this.props.parent.state.nightOrder[this.props.parent.state.nightCurrentOrderIndex];\n\n                                if (this.props.parent.state.nightCurrentState == NIGHT_ROUND.Doctor) {\n                                    this.state.auxActivated = true;\n                                    this.state.auxUnique = true;\n                                }\n                            }\n                            \n                            this.props.parent.setState(this.props.parent.state, () => { window.scrollTo(0,0); });\n                        }}\n                    >\n                        Urmatorul\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return this.props.parent.state.isNight ? this.renderNight() : this.renderDay();\n    }\n}\n\nclass GeneratorPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        <div id=\"generatorPage\" className=\"main\">\n            <h2>Generator</h2>\n            <div id=\"presetCnt\">\n                <div id=\"presetSelectCnt\">\n                    <span>Preset:</span>\n                </div>\n            </div>\n        </div>\n    }\n};\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gameStep: GAME_STEP.WELCOME,\n            gameSettings: Object.assign({}, DEFAULT_GAME_SETTINGS),\n\n            players: [],\n            nightOrder: DEFAULT_ROUNDS_ORDER.slice(),\n\n            dayNumber: 1,\n            isNight: false,\n\n            nightCurrentState: null,\n            nightCurrentOrderIndex: 0,\n            night: null,\n            nights: []\n        };\n\n        this.createHash = this.createHash.bind(this);\n    }\n\n    componentDidMount() {\n        let decodedURI = decodeURIComponent(window.location.hash);\n        let token1 = decodedURI.indexOf(\"&&\");\n\n        if (token1 == -1) return; \n        \n        let playersString = decodedURI.substring(1, token1);\n        console.log(\"playersString\", playersString);\n\n        let players = playersString.split(\"&\");\n        for (let i=0, length=players.length; i < length; ++i) {\n            let chars = players[i].split(\"|\");\n\n            console.log(players[i], chars);\n\n            this.state.players.push({\n                name: chars[0],\n                role: Object.keys(PLAYER_ROLES).filter(role => PLAYER_ROLES[role].id == chars[1])[0],\n                alive: chars[2] == \"1\" ? true : false\n            });\n        }\n\n        console.log(this.state.players);\n\n        let token2 = decodedURI.indexOf(\"&&\", token1 + 1);\n        this.state.day = parseInt(decodedURI.substring(token1 + 2, token2));\n\n        this.state.gameStep = GAME_STEP.NIGHT;\n        this.setState(this.state);\n    }\n\n    createHash() {\n        window.location.hash = createHashFromPlayers(this.state.players) + \"&\" + this.state.dayNumber + \"&&\";\n    }\n\n    render() {\n        let displayBlock = null;\n        if (this.state.gameStep == GAME_STEP.WELCOME) displayBlock = <WelcomePage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.GAME_SETUP) displayBlock = <GameSetupPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.PLAYERS_SETUP) displayBlock = <PlayersSetupPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.NIGHT) displayBlock = <NightPage parent={this}/>\n        else if (this.state.gameStep == GAME_STEP.GENERATOR) displayBlock = <GeneratorPage parent={this}/>\n\n        return displayBlock;\n    }\n};\n\nReactDOM.render(\n    <MainPage/>,\n    document.getElementById('root')\n);"]}